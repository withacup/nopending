{"solution_code": "public class Solution {--newline--    public void dfs(int[][] M, int[] visited, int i) {--newline--        for (int j = 0; j < M.length; j++) {--newline--            if (M[i][j] == 1 && visited[j] == 0) {--newline--                visited[j] = 1;--newline--                dfs(M, visited, j);--newline--            }--newline--        }--newline--    }--newline--    public int findCircleNum(int[][] M) {--newline--        int[] visited = new int[M.length];--newline--        int count = 0;--newline--        for (int i = 0; i < M.length; i++) {--newline--            if (visited[i] == 0) {--newline--                dfs(M, visited, i);--newline--                count++;--newline--            }--newline--        }--newline--        return count;--newline--    }--newline--}", "modified_code": null, "total_cases": 113, "l_type": "java"}