{"solution_code": " public class Solution {--newline--    public boolean containsNearbyAlmostDuplicate(int[] nums, int k, int t) {--newline--        if (k < 1 || t < 0) return false;--newline--        Map<Long, Long> map = new HashMap<>();--newline--        for (int i = 0; i < nums.length; i++) {--newline--            long remappedNum = (long) nums[i] - Integer.MIN_VALUE;--newline--            long bucket = remappedNum / ((long) t + 1);--newline--            if (map.containsKey(bucket)--newline--                    || (map.containsKey(bucket - 1) && remappedNum - map.get(bucket - 1) <= t)--newline--                        || (map.containsKey(bucket + 1) && map.get(bucket + 1) - remappedNum <= t))--newline--                            return true;--newline--            if (map.entrySet().size() >= k) {--newline--                long lastBucket = ((long) nums[i - k] - Integer.MIN_VALUE) / ((long) t + 1);--newline--                map.remove(lastBucket);--newline--            }--newline--            map.put(bucket, remappedNum);--newline--        }--newline--        return false;--newline--    }--newline--}--newline--", "modified_code": null, "total_cases": 40, "l_type": "java"}