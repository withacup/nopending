{"solution_code": "public class Solution {--newline--    public boolean isValid(String code) {--newline--        Stack<String> stack = new Stack<>();--newline--        for(int i = 0; i < code.length();){--newline--            if(i>0 && stack.isEmpty()) return false;--newline--            if(code.startsWith(\"<![CDATA[\", i)){--newline--                int j = i+9;--newline--                i = code.indexOf(\"]]>\", j);--newline--                if(i < 0) return false;--newline--                i += 3;--newline--            }else if(code.startsWith(\"</\", i)){--newline--                int j = i + 2;--newline--                i = code.indexOf('>', j);--newline--                if(i < 0 || i == j || i - j > 9) return false;--newline--                for(int k = j; k < i; k++){--newline--                    if(!Character.isUpperCase(code.charAt(k))) return false;--newline--                }--newline--                String s = code.substring(j, i++);--newline--                if(stack.isEmpty() || !stack.pop().equals(s)) return false;--newline--            }else if(code.startsWith(\"<\", i)){--newline--                int j = i + 1;--newline--                i = code.indexOf('>', j);--newline--                if(i < 0 || i == j || i - j > 9) return false;--newline--                for(int k = j; k < i; k++){--newline--                    if(!Character.isUpperCase(code.charAt(k))) return false;--newline--                }--newline--                String s = code.substring(j, i++);--newline--                stack.push(s);--newline--            }else{--newline--                i++;--newline--            }--newline--        }--newline--        return stack.isEmpty();--newline--    }--newline--}--newline--", "modified_code": null, "total_cases": 256, "l_type": "java"}