{
    "solution_code": "class Solution {--newline--public:--newline--    string minWindow(string S, string T) {--newline--        if (S.empty() || T.empty())--newline--        {--newline--            return \"\";--newline--        }--newline--        int count = T.size();--newline--        int require[128] = {0};--newline--        bool chSet[128] = {false};--newline--        for (int i = 0; i < count; ++i)--newline--        {--newline--            require[T[i]]++;--newline--            chSet[T[i]] = true;--newline--        }--newline--        int i = -1;--newline--        int j = 0;--newline--        int minLen = INT_MAX;--newline--        int minIdx = 0;--newline--        while (i < (int)S.size() && j < (int)S.size())--newline--        {--newline--            if (count)--newline--            {--newline--                i++;--newline--                require[S[i]]--;--newline--                if (chSet[S[i]] && require[S[i]] >= 0)--newline--                {--newline--                    count--;--newline--                }--newline--            }--newline--            else--newline--            {--newline--                if (minLen > i - j + 1)--newline--                {--newline--                    minLen = i - j + 1;--newline--                    minIdx = j;--newline--                }--newline--                require[S[j]]++;--newline--                if (chSet[S[j]] && require[S[j]] > 0)--newline--                {--newline--                    count++;--newline--                }--newline--                j++;--newline--            }--newline--        }--newline--        if (minLen == INT_MAX)--newline--        {--newline--            return \"\";--newline--        }--newline--        return S.substr(minIdx, minLen);--newline--    }--newline--};--newline--",
    "l_type": "cpp",
    "modified_code": null,
    "total_cases": 268
}