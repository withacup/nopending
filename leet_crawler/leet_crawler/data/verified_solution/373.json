{"solution_code": "public class Solution {--newline--    public List<int[]> kSmallestPairs(int[] nums1, int[] nums2, int k) {--newline--        PriorityQueue<int[]> que = new PriorityQueue<>((a,b)->a[0]+a[1]-b[0]-b[1]);--newline--        List<int[]> res = new ArrayList<>();--newline--        if(nums1.length==0 || nums2.length==0 || k==0) return res;--newline--        for(int i=0; i<nums1.length && i<k; i++) que.offer(new int[]{nums1[i], nums2[0], 0});--newline--        while(k-- > 0 && !que.isEmpty()){--newline--            int[] cur = que.poll();--newline--            res.add(new int[]{cur[0], cur[1]});--newline--            if(cur[2] == nums2.length-1) continue;--newline--            que.offer(new int[]{cur[0],nums2[cur[2]+1], cur[2]+1});--newline--        }--newline--        return res;--newline--    }--newline--}--newline--", "modified_code": null, "total_cases": 27, "l_type": "java"}