{"solution_code": "public class Solution {--newline--    public List<List<Integer>> palindromePairs(String[] words) {--newline--        List<List<Integer>> ret = new ArrayList<>(); --newline--        if (words == null || words.length < 2) return ret;--newline--        Map<String, Integer> map = new HashMap<String, Integer>();--newline--        for (int i=0; i<words.length; i++) map.put(words[i], i);--newline--        for (int i=0; i<words.length; i++) {--newline--            // System.out.println(words[i]);--newline--            for (int j=0; j<=words[i].length(); j++) { // notice it should be \"j <= words[i].length()\"--newline--                String str1 = words[i].substring(0, j);--newline--                String str2 = words[i].substring(j);--newline--                if (isPalindrome(str1)) {--newline--                    String str2rvs = new StringBuilder(str2).reverse().toString();--newline--                    if (map.containsKey(str2rvs) && map.get(str2rvs) != i) {--newline--                        List<Integer> list = new ArrayList<Integer>();--newline--                        list.add(map.get(str2rvs));--newline--                        list.add(i);--newline--                        ret.add(list);--newline--                        // System.out.printf(\"isPal(str1): %s\\n\", list.toString());--newline--                    }--newline--                }--newline--                if (isPalindrome(str2)) {--newline--                    String str1rvs = new StringBuilder(str1).reverse().toString();--newline--                    // check \"str.length() != 0\" to avoid duplicates--newline--                    if (map.containsKey(str1rvs) && map.get(str1rvs) != i && str2.length()!=0) { --newline--                        List<Integer> list = new ArrayList<Integer>();--newline--                        list.add(i);--newline--                        list.add(map.get(str1rvs));--newline--                        ret.add(list);--newline--                        // System.out.printf(\"isPal(str2): %s\\n\", list.toString());--newline--                    }--newline--                }--newline--            }--newline--        }--newline--        return ret;--newline--    }--newline--    --newline--    private boolean isPalindrome(String str) {--newline--        int left = 0;--newline--        int right = str.length() - 1;--newline--        while (left <= right) {--newline--            if (str.charAt(left++) !=  str.charAt(right--)) return false;--newline--        }--newline--        return true;--newline--    }--newline--    --newline--}", "modified_code": null, "total_cases": 134, "l_type": "java"}