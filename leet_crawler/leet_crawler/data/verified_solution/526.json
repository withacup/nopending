{"solution_code": "public class Solution {--newline--    int count = 0;--newline--    --newline--    public int countArrangement(int N) {--newline--        if (N == 0) return 0;--newline--        helper(N, 1, new int[N + 1]);--newline--        return count;--newline--    }--newline--    --newline--    private void helper(int N, int pos, int[] used) {--newline--        if (pos > N) {--newline--            count++;--newline--            return;--newline--        }--newline--        --newline--        for (int i = 1; i <= N; i++) {--newline--            if (used[i] == 0 && (i % pos == 0 || pos % i == 0)) {--newline--                used[i] = 1;--newline--                helper(N, pos + 1, used);--newline--                used[i] = 0;--newline--            }--newline--        }--newline--    }--newline--}--newline--", "modified_code": null, "total_cases": 15, "l_type": "java"}