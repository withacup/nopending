{"solution_code": "public class Solution {--newline--    public boolean isValidSudoku(char[][] board) {--newline--        for(int i = 0; i<9; i++){--newline--            HashSet<Character> rows = new HashSet<Character>();--newline--            HashSet<Character> columns = new HashSet<Character>();--newline--            HashSet<Character> cube = new HashSet<Character>();--newline--            for (int j = 0; j < 9;j++){--newline--                if(board[i][j]!='.' && !rows.add(board[i][j]))--newline--                    return false;--newline--                if(board[j][i]!='.' && !columns.add(board[j][i]))--newline--                    return false;--newline--                int RowIndex = 3*(i/3);--newline--                int ColIndex = 3*(i%3);--newline--                if(board[RowIndex + j/3][ColIndex + j%3]!='.' && !cube.add(board[RowIndex + j/3][ColIndex + j%3]))--newline--                    return false;--newline--            }--newline--        }--newline--        return true;--newline--    }--newline--}", "modified_code": null, "total_cases": 501, "l_type": "java"}