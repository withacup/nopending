{"l_type": "cpp", "modified_code": null, "solution_code": "class FileSystem {--newline--private:--newline--    struct TrieNode {--newline--        bool isFile;--newline--        string content;--newline--        unordered_map<string, TrieNode *> children;--newline--        TrieNode() : isFile(false) {}--newline--    };--newline----newline--    TrieNode *root;--newline--    --newline--public:--newline--    FileSystem() {--newline--        root = new TrieNode();--newline--    }--newline--    --newline--    vector<string> getStrs(string &path) {--newline--        vector<string> ans;--newline--        int i = 1, j = 1;--newline--        while (j <= path.length()) {--newline--            if (i != j && (j == path.length() || path[j] == '/')) {--newline--                ans.push_back(path.substr(i, j - i));--newline--                i = j + 1;--newline--            }--newline--            ++j;--newline--        }--newline--        return ans;--newline--    }--newline--    --newline--    vector<string> ls(string path) {--newline--        vector<string> strs = getStrs(path);--newline--        TrieNode *curr = root;--newline--        for (string &str : strs)--newline--            curr = curr->children[str];--newline--        --newline--        if (curr->isFile)--newline--            return {strs.back()};--newline--        --newline--        vector<string> ans;--newline--        for (auto &p : curr->children)--newline--            ans.push_back(p.first);--newline--        sort(ans.begin(), ans.end());--newline--        return ans;--newline--    }--newline--    --newline--    void mkdir(string path) {--newline--        vector<string> strs = getStrs(path);--newline--        TrieNode *curr = root;--newline--        for (string &str : strs) {--newline--            if (!curr->children.count(str))--newline--                curr->children[str] = new TrieNode();--newline--            curr = curr->children[str];--newline--        }--newline--    }--newline--    --newline--    void addContentToFile(string filePath, string content) {--newline--        vector<string> strs = getStrs(filePath);--newline--        TrieNode *curr = root;--newline--        for (string &str : strs) {--newline--            if (!curr->children.count(str))--newline--                curr->children[str] = new TrieNode();--newline--            curr = curr->children[str];--newline--        }--newline--        curr->isFile = true;--newline--        curr->content += content;--newline--    }--newline--    --newline--    string readContentFromFile(string filePath) {--newline--        vector<string> strs = getStrs(filePath);--newline--        TrieNode *curr = root;--newline--        for (string &str : strs)--newline--            curr = curr->children[str];--newline--        return curr->content;--newline--    }--newline--};--newline--", "total_cases": 63}