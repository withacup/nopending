{"solution_code": "public class Solution {--newline--    public int sumOfLeftLeaves(TreeNode root) {--newline--        if(root == null) return 0;--newline--        int ans = 0;--newline--        Stack<TreeNode> stack = new Stack<TreeNode>();--newline--        stack.push(root);--newline--        --newline--        while(!stack.empty()) {--newline--            TreeNode node = stack.pop();--newline--            if(node.left != null) {--newline--                if (node.left.left == null && node.left.right == null)--newline--                    ans += node.left.val;--newline--                else--newline--                    stack.push(node.left);--newline--            }--newline--            if(node.right != null) {--newline--                if (node.right.left != null || node.right.right != null)--newline--                    stack.push(node.right);--newline--            }--newline--        }--newline--        return ans;--newline--    }--newline--    --newline--}", "modified_code": null, "total_cases": 102, "l_type": "java"}