{"solution_code": "public class Solution {--newline--  --newline--  public String reverseWords(String s) {--newline--    if (s == null) return null;--newline--    --newline--    char[] a = s.toCharArray();--newline--    int n = a.length;--newline--    --newline--    // step 1. reverse the whole string--newline--    reverse(a, 0, n - 1);--newline--    // step 2. reverse each word--newline--    reverseWords(a, n);--newline--    // step 3. clean up spaces--newline--    return cleanSpaces(a, n);--newline--  }--newline--  --newline--  void reverseWords(char[] a, int n) {--newline--    int i = 0, j = 0;--newline--      --newline--    while (i < n) {--newline--      while (i < j || i < n && a[i] == ' ') i++; // skip spaces--newline--      while (j < i || j < n && a[j] != ' ') j++; // skip non spaces--newline--      reverse(a, i, j - 1);                      // reverse the word--newline--    }--newline--  }--newline--  --newline--  // trim leading, trailing and multiple spaces--newline--  String cleanSpaces(char[] a, int n) {--newline--    int i = 0, j = 0;--newline--      --newline--    while (j < n) {--newline--      while (j < n && a[j] == ' ') j++;             // skip spaces--newline--      while (j < n && a[j] != ' ') a[i++] = a[j++]; // keep non spaces--newline--      while (j < n && a[j] == ' ') j++;             // skip spaces--newline--      if (j < n) a[i++] = ' ';                      // keep only one space--newline--    }--newline--  --newline--    return new String(a).substring(0, i);--newline--  }--newline--  --newline--  // reverse a[] from a[i] to a[j]--newline--  private void reverse(char[] a, int i, int j) {--newline--    while (i < j) {--newline--      char t = a[i];--newline--      a[i++] = a[j];--newline--      a[j--] = t;--newline--    }--newline--  }--newline--  --newline--}", "modified_code": null, "total_cases": 22, "l_type": "java"}