{"solution_code": "public class Solution {--newline--    public String frequencySort(String s) {--newline--        if (s == null) {--newline--            return null;--newline--        }--newline--        Map<Character, Integer> map = new HashMap();--newline--        char[] charArray = s.toCharArray();--newline--        int max = 0;--newline--        for (Character c : charArray) {--newline--            if (!map.containsKey(c)) {--newline--                map.put(c, 0);--newline--            }--newline--            map.put(c, map.get(c) + 1);--newline--            max = Math.max(max, map.get(c));--newline--        }--newline--    --newline--        List<Character>[] array = buildArray(map, max);--newline--    --newline--        return buildString(array);--newline--    }--newline--    --newline--    private List<Character>[] buildArray(Map<Character, Integer> map, int maxCount) {--newline--        List<Character>[] array = new List[maxCount + 1];--newline--        for (Character c : map.keySet()) {--newline--            int count = map.get(c);--newline--            if (array[count] == null) {--newline--                array[count] = new ArrayList();--newline--            }--newline--            array[count].add(c);--newline--        }--newline--        return array;--newline--    }--newline--    --newline--    private String buildString(List<Character>[] array) {--newline--        StringBuilder sb = new StringBuilder();--newline--        for (int i = array.length - 1; i > 0; i--) {--newline--            List<Character> list = array[i];--newline--            if (list != null) {--newline--                for (Character c : list) {--newline--                    for (int j = 0; j < i; j++) {--newline--                        sb.append(c);--newline--                    }--newline--                }--newline--            }--newline--        }--newline--        return sb.toString();--newline--    }--newline--    --newline--}", "modified_code": null, "total_cases": 35, "l_type": "java"}