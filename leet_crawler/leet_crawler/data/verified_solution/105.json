{"solution_code": "public class Solution {--newline--    public TreeNode buildTree(int[] preorder, int[] inorder) {--newline--        return helper(0, 0, inorder.length - 1, preorder, inorder);--newline--    }--newline--    --newline--    public TreeNode helper(int preStart, int inStart, int inEnd, int[] preorder, int[] inorder) {--newline--        if (preStart > preorder.length - 1 || inStart > inEnd) {--newline--            return null;--newline--        }--newline--        TreeNode root = new TreeNode(preorder[preStart]);--newline--        int inIndex = 0; // Index of current root in inorder--newline--        for (int i = inStart; i <= inEnd; i++) {--newline--            if (inorder[i] == root.val) {--newline--                inIndex = i;--newline--            }--newline--        }--newline--        root.left = helper(preStart + 1, inStart, inIndex - 1, preorder, inorder);--newline--        root.right = helper(preStart + inIndex - inStart + 1, inIndex + 1, inEnd, preorder, inorder);--newline--        return root;--newline--    }--newline--    --newline--}", "modified_code": null, "total_cases": 202, "l_type": "java"}