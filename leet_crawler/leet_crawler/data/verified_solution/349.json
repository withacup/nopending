{"solution_code": "public class Solution {--newline--    public int[] intersection(int[] nums1, int[] nums2) {--newline--        Set<Integer> set = new HashSet<>();--newline--        Arrays.sort(nums2);--newline--        for (Integer num : nums1) {--newline--            if (binarySearch(nums2, num)) {--newline--                set.add(num);--newline--            }--newline--        }--newline--        int i = 0;--newline--        int[] result = new int[set.size()];--newline--        for (Integer num : set) {--newline--            result[i++] = num;--newline--        }--newline--        return result;--newline--    }--newline--    --newline--    public boolean binarySearch(int[] nums, int target) {--newline--        int low = 0;--newline--        int high = nums.length - 1;--newline--        while (low <= high) {--newline--            int mid = low + (high - low) / 2;--newline--            if (nums[mid] == target) {--newline--                return true;--newline--            }--newline--            if (nums[mid] > target) {--newline--                high = mid - 1;--newline--            } else {--newline--                low = mid + 1;--newline--            }--newline--        }--newline--        return false;--newline--    }--newline--}", "modified_code": null, "total_cases": 60, "l_type": "java"}