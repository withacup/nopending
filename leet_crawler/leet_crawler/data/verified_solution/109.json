{"solution_code": "public class Solution {--newline--    private ListNode node;--newline--    --newline--    public TreeNode sortedListToBST(ListNode head) {--newline--        if(head == null){--newline--            return null;--newline--        }--newline--        --newline--        int size = 0;--newline--        ListNode runner = head;--newline--        node = head;--newline--        --newline--        while(runner != null){--newline--            runner = runner.next;--newline--            size ++;--newline--        }--newline--        --newline--        return inorderHelper(0, size - 1);--newline--    }--newline--    --newline--    public TreeNode inorderHelper(int start, int end){--newline--        if(start > end){--newline--            return null;--newline--        }--newline--        --newline--        int mid = start + (end - start) / 2;--newline--        TreeNode left = inorderHelper(start, mid - 1);--newline--        --newline--        TreeNode treenode = new TreeNode(node.val);--newline--        treenode.left = left;--newline--        node = node.next;--newline--    --newline--        TreeNode right = inorderHelper(mid + 1, end);--newline--        treenode.right = right;--newline--        --newline--        return treenode;--newline--    }--newline--}", "modified_code": null, "total_cases": 32, "l_type": "java"}