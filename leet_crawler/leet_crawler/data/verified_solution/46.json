{"solution_code": "public class Solution {--newline--    public List<List<Integer>> permute(int[] num) {--newline--        List<List<Integer>> ans = new ArrayList<List<Integer>>();--newline--        if (num.length ==0) return ans;--newline--        List<Integer> l0 = new ArrayList<Integer>();--newline--        l0.add(num[0]);--newline--        ans.add(l0);--newline--        for (int i = 1; i< num.length; ++i){--newline--            List<List<Integer>> new_ans = new ArrayList<List<Integer>>(); --newline--            for (int j = 0; j<=i; ++j){            --newline--               for (List<Integer> l : ans){--newline--                   List<Integer> new_l = new ArrayList<Integer>(l);--newline--                   new_l.add(j,num[i]);--newline--                   new_ans.add(new_l);--newline--               }--newline--            }--newline--            ans = new_ans;--newline--        }--newline--        return ans;--newline--    }--newline--    --newline--}", "modified_code": null, "total_cases": 25, "l_type": "java"}