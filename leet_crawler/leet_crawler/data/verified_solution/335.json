{"solution_code": "// Categorize the self-crossing scenarios, there are 3 of them: --newline--// 1. Fourth line crosses first line and works for fifth line crosses second line and so on...--newline--// 2. Fifth line meets first line and works for the lines after--newline--// 3. Sixth line crosses first line and works for the lines after--newline--public class Solution {--newline--    public boolean isSelfCrossing(int[] x) {--newline--        int l = x.length;--newline--        if(l <= 3) return false;--newline--        --newline--        for(int i = 3; i < l; i++){--newline--            if(x[i] >= x[i-2] && x[i-1] <= x[i-3]) return true;  //Fourth line crosses first line and onward--newline--            if(i >=4)--newline--            {--newline--                if(x[i-1] == x[i-3] && x[i] + x[i-4] >= x[i-2]) return true; // Fifth line meets first line and onward--newline--            }--newline--            if(i >=5)--newline--            {--newline--                if(x[i-2] - x[i-4] >= 0 && x[i] >= x[i-2] - x[i-4] && x[i-1] >= x[i-3] - x[i-5] && x[i-1] <= x[i-3]) return true;  // Sixth line crosses first line and onward--newline--            }--newline--        }--newline--        return false;--newline--    }--newline--}", "modified_code": null, "total_cases": 29, "l_type": "java"}