{"solution_code": "public class Solution {--newline--    public List<List<Integer>> threeSum(int[] num) {--newline--        Arrays.sort(num);--newline--        List<List<Integer>> res = new LinkedList<>(); --newline--        for (int i = 0; i < num.length-2; i++) {--newline--            if (i == 0 || (i > 0 && num[i] != num[i-1])) {--newline--                int lo = i+1, hi = num.length-1, sum = 0 - num[i];--newline--                while (lo < hi) {--newline--                    if (num[lo] + num[hi] == sum) {--newline--                        res.add(Arrays.asList(num[i], num[lo], num[hi]));--newline--                        while (lo < hi && num[lo] == num[lo+1]) lo++;--newline--                        while (lo < hi && num[hi] == num[hi-1]) hi--;--newline--                        lo++; hi--;--newline--                    } else if (num[lo] + num[hi] < sum) lo++;--newline--                    else hi--;--newline--               }--newline--            }--newline--        }--newline--        return res;--newline--    }--newline--    --newline--}", "modified_code": null, "total_cases": 313, "l_type": "java"}