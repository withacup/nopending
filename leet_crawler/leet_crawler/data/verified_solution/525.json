{"solution_code": "public class Solution {--newline--    public int findMaxLength(int[] nums) {--newline--        for (int i = 0; i < nums.length; i++) {--newline--            if (nums[i] == 0) nums[i] = -1;--newline--        }--newline--        --newline--        Map<Integer, Integer> sumToIndex = new HashMap<>();--newline--        sumToIndex.put(0, -1);--newline--        int sum = 0, max = 0;--newline--        --newline--        for (int i = 0; i < nums.length; i++) {--newline--            sum += nums[i];--newline--            if (sumToIndex.containsKey(sum)) {--newline--                max = Math.max(max, i - sumToIndex.get(sum));--newline--            }--newline--            else {--newline--                sumToIndex.put(sum, i);--newline--            }--newline--        }--newline--        --newline--        return max;--newline--    }--newline--}--newline--", "modified_code": null, "total_cases": 555, "l_type": "java"}