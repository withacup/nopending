{"solution_code": "public class Solution {--newline--    public int trap(int[] A){--newline--        int a=0;--newline--        int b=A.length-1;--newline--        int max=0;--newline--        int leftmax=0;--newline--        int rightmax=0;--newline--        while(a<=b){--newline--            leftmax=Math.max(leftmax,A[a]);--newline--            rightmax=Math.max(rightmax,A[b]);--newline--            if(leftmax<rightmax){--newline--                max+=(leftmax-A[a]);       // leftmax is smaller than rightmax, so the (leftmax-A[a]) water can be stored--newline--                a++;--newline--            }--newline--            else{--newline--                max+=(rightmax-A[b]);--newline--                b--;--newline--            }--newline--        }--newline--        return max;--newline--    }--newline--}", "modified_code": null, "total_cases": 315, "l_type": "java"}