{"solution_code": "public class Solution {--newline--    public List<Integer> postorderTraversal(TreeNode root) {--newline--        LinkedList<Integer> result = new LinkedList<>();--newline--        Deque<TreeNode> stack = new ArrayDeque<>();--newline--        TreeNode p = root;--newline--        while(!stack.isEmpty() || p != null) {--newline--            if(p != null) {--newline--                stack.push(p);--newline--                result.addFirst(p.val);  // Reverse the process of preorder--newline--                p = p.right;             // Reverse the process of preorder--newline--            } else {--newline--                TreeNode node = stack.pop();--newline--                p = node.left;           // Reverse the process of preorder--newline--            }--newline--        }--newline--        return result;--newline--    }--newline--}", "modified_code": null, "total_cases": 67, "l_type": "java"}