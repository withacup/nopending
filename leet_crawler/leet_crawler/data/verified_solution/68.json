{"solution_code": "public class Solution {--newline--    public List<String> fullJustify(String[] words, int L) {--newline--        List<String> lines = new ArrayList<String>();--newline--        --newline--        int index = 0;--newline--        while (index < words.length) {--newline--            int count = words[index].length();--newline--            int last = index + 1;--newline--            while (last < words.length) {--newline--                if (words[last].length() + count + 1 > L) break;--newline--                count += words[last].length() + 1;--newline--                last++;--newline--            }--newline--            --newline--            StringBuilder builder = new StringBuilder();--newline--            int diff = last - index - 1;--newline--            // if last line or number of words in the line is 1, left-justified--newline--            if (last == words.length || diff == 0) {--newline--                for (int i = index; i < last; i++) {--newline--                    builder.append(words[i] + \" \");--newline--                }--newline--                builder.deleteCharAt(builder.length() - 1);--newline--                for (int i = builder.length(); i < L; i++) {--newline--                    builder.append(\" \");--newline--                }--newline--            } else {--newline--                // middle justified--newline--                int spaces = (L - count) / diff;--newline--                int r = (L - count) % diff;--newline--                for (int i = index; i < last; i++) {--newline--                    builder.append(words[i]);--newline--                    if (i < last - 1) {--newline--                        for (int j = 0; j <= (spaces + ((i - index) < r ? 1 : 0)); j++) {--newline--                            builder.append(\" \");--newline--                        }--newline--                    }--newline--                }--newline--            }--newline--            lines.add(builder.toString());--newline--            index = last;--newline--        }--newline--        --newline--        --newline--        return lines;--newline--    }--newline--}", "modified_code": null, "total_cases": 24, "l_type": "java"}