{"solution_code": "public class Solution {--newline--    public boolean canPartition(int[] nums) {--newline--        int sum = 0;--newline--        --newline--        for (int num : nums) {--newline--            sum += num;--newline--        }--newline--        --newline--        if ((sum & 1) == 1) {--newline--            return false;--newline--        }--newline--        sum /= 2;--newline--        --newline--        int n = nums.length;--newline--        boolean[] dp = new boolean[sum+1];--newline--        Arrays.fill(dp, false);--newline--        dp[0] = true;--newline--        --newline--        for (int num : nums) {--newline--            for (int i = sum; i > 0; i--) {--newline--                if (i >= num) {--newline--                    dp[i] = dp[i] || dp[i-num];--newline--                }--newline--            }--newline--        }--newline--        --newline--        return dp[sum];--newline--    }--newline--    --newline--}", "modified_code": null, "total_cases": 104, "l_type": "java"}