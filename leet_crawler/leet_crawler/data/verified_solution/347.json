{"solution_code": "public class Solution {--newline--    public List<Integer> topKFrequent(int[] nums, int k) {--newline--    --newline--        List<Integer>[] bucket = new List[nums.length + 1];--newline--        Map<Integer, Integer> frequencyMap = new HashMap<Integer, Integer>();--newline--    --newline--        for (int n : nums) {--newline--            frequencyMap.put(n, frequencyMap.getOrDefault(n, 0) + 1);--newline--        }--newline--    --newline--        for (int key : frequencyMap.keySet()) {--newline--            int frequency = frequencyMap.get(key);--newline--            if (bucket[frequency] == null) {--newline--                bucket[frequency] = new ArrayList<>();--newline--            }--newline--            bucket[frequency].add(key);--newline--        }--newline--    --newline--        List<Integer> res = new ArrayList<>();--newline--    --newline--        for (int pos = bucket.length - 1; pos >= 0 && res.size() < k; pos--) {--newline--            if (bucket[pos] != null) {--newline--                res.addAll(bucket[pos]);--newline--            }--newline--        }--newline--        return res;--newline--    }--newline--}", "modified_code": null, "total_cases": 20, "l_type": "java"}