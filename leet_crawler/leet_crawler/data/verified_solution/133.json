{"solution_code": "public class Solution {--newline--    private HashMap<Integer, UndirectedGraphNode> map = new HashMap<>();--newline--    public UndirectedGraphNode cloneGraph(UndirectedGraphNode node) {--newline--        return clone(node);--newline--    }--newline----newline--    private UndirectedGraphNode clone(UndirectedGraphNode node) {--newline--        if (node == null) return null;--newline--        --newline--        if (map.containsKey(node.label)) {--newline--            return map.get(node.label);--newline--        }--newline--        UndirectedGraphNode clone = new UndirectedGraphNode(node.label);--newline--        map.put(clone.label, clone);--newline--        for (UndirectedGraphNode neighbor : node.neighbors) {--newline--            clone.neighbors.add(clone(neighbor));--newline--        }--newline--        return clone;--newline--    }--newline--}", "modified_code": null, "total_cases": 12, "l_type": "java"}