{"solution_code": "public class Solution {--newline--    public boolean isSymmetric(TreeNode root) {--newline--        if(root==null)  return true;--newline--        --newline--        Stack<TreeNode> stack = new Stack<TreeNode>();--newline--        TreeNode left, right;--newline--        if(root.left!=null){--newline--            if(root.right==null) return false;--newline--            stack.push(root.left);--newline--            stack.push(root.right);--newline--        }--newline--        else if(root.right!=null){--newline--            return false;--newline--        }--newline--            --newline--        while(!stack.empty()){--newline--            if(stack.size()%2!=0)   return false;--newline--            right = stack.pop();--newline--            left = stack.pop();--newline--            if(right.val!=left.val) return false;--newline--            --newline--            if(left.left!=null){--newline--                if(right.right==null)   return false;--newline--                stack.push(left.left);--newline--                stack.push(right.right);--newline--            }--newline--            else if(right.right!=null){--newline--                return false;--newline--            }--newline--                --newline--            if(left.right!=null){--newline--                if(right.left==null)   return false;--newline--                stack.push(left.right);--newline--                stack.push(right.left);--newline--            }--newline--            else if(right.left!=null){--newline--                return false;--newline--            }--newline--        }--newline--        --newline--        return true;--newline--    }--newline--}", "modified_code": null, "total_cases": 193, "l_type": "java"}