{"solution_code": "public class Solution {--newline--    public int findIntegers(int num) {--newline--        StringBuilder sb = new StringBuilder(Integer.toBinaryString(num)).reverse();--newline--        int n = sb.length();--newline--        --newline--        int a[] = new int[n];--newline--        int b[] = new int[n];--newline--        a[0] = b[0] = 1;--newline--        for (int i = 1; i < n; i++) {--newline--            a[i] = a[i - 1] + b[i - 1];--newline--            b[i] = a[i - 1];--newline--        }--newline--        --newline--        int result = a[n - 1] + b[n - 1];--newline--        for (int i = n - 2; i >= 0; i--) {--newline--            if (sb.charAt(i) == '1' && sb.charAt(i + 1) == '1') break;--newline--            if (sb.charAt(i) == '0' && sb.charAt(i + 1) == '0') result -= b[i];--newline--        }--newline--        --newline--        return result;--newline--    }--newline--}--newline--", "modified_code": null, "total_cases": 527, "l_type": "java"}