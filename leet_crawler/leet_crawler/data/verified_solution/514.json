{"solution_code": "public class Solution {--newline--    public int findRotateSteps(String ring, String key) {--newline--        int n = ring.length();--newline--        int m = key.length();--newline--        int[][] dp = new int[m + 1][n];--newline--        --newline--        for (int i = m - 1; i >= 0; i--) {--newline--            for (int j = 0; j < n; j++) {--newline--                dp[i][j] = Integer.MAX_VALUE;--newline--                for (int k = 0; k < n; k++) {--newline--                    if (ring.charAt(k) == key.charAt(i)) {--newline--                        int diff = Math.abs(j - k);--newline--                        int step = Math.min(diff, n - diff);--newline--                        dp[i][j] = Math.min(dp[i][j], step + dp[i + 1][k]);--newline--                    }--newline--                }--newline--            }--newline--        }--newline--        --newline--        return dp[0][0] + m;--newline--    }--newline--}--newline--", "modified_code": null, "total_cases": 302, "l_type": "java"}