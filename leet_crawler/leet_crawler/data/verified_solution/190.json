{"solution_code": "public class Solution {--newline--    // cache--newline--    private final Map<Byte, Integer> cache = new HashMap<Byte, Integer>();--newline--    public int reverseBits(int n) {--newline--        byte[] bytes = new byte[4];--newline--        for (int i = 0; i < 4; i++) // convert int into 4 bytes--newline--            bytes[i] = (byte)((n >>> 8*i) & 0xFF);--newline--        int result = 0;--newline--        for (int i = 0; i < 4; i++) {--newline--            result += reverseByte(bytes[i]); // reverse per byte--newline--            if (i < 3)--newline--                result <<= 8;--newline--        }--newline--        return result;--newline--    }--newline--    --newline--    private int reverseByte(byte b) {--newline--        Integer value = cache.get(b); // first look up from cache--newline--        if (value != null)--newline--            return value;--newline--        value = 0;--newline--        // reverse by bit--newline--        for (int i = 0; i < 8; i++) {--newline--            value += ((b >>> i) & 1);--newline--            if (i < 7)--newline--                value <<= 1;--newline--        }--newline--        cache.put(b, value);--newline--        return value;--newline--    }--newline--}", "modified_code": null, "total_cases": 600, "l_type": "java"}