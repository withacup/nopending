{"solution_code": "public class Solution {--newline--    public int findLUSlength(String[] strs) {--newline--        Map<String, Integer> subseqFreq = new HashMap<>();--newline--        for (String s : strs) --newline--            for (String subSeq : getSubseqs(s))--newline--                subseqFreq.put(subSeq, subseqFreq.getOrDefault(subSeq, 0) + 1);--newline--        int longest = -1;--newline--        for (Map.Entry<String, Integer> entry : subseqFreq.entrySet()) --newline--            if (entry.getValue() == 1) longest = Math.max(longest, entry.getKey().length());--newline--        return longest;--newline--    }--newline--    --newline--    public static Set<String> getSubseqs(String s) {--newline--        Set<String> res = new HashSet<>();--newline--        if (s.length() == 0) {--newline--             res.add(\"\");--newline--             return res;--newline--        }--newline--        Set<String> subRes = getSubseqs(s.substring(1));--newline--        res.addAll(subRes);--newline--        for (String seq : subRes) res.add(s.charAt(0) + seq);--newline--        return res;--newline--    }--newline--    --newline--}", "modified_code": null, "total_cases": 98, "l_type": "java"}