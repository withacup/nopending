{"solution_code": "public class Solution {--newline--        public int pathSum(TreeNode root, int sum) {--newline--            HashMap<Integer, Integer> preSum = new HashMap();--newline--            preSum.put(0,1);--newline--            return helper(root, 0, sum, preSum);--newline--        }--newline--        --newline--        public int helper(TreeNode root, int currSum, int target, HashMap<Integer, Integer> preSum) {--newline--            if (root == null) {--newline--                return 0;--newline--            }--newline--            --newline--            currSum += root.val;--newline--            int res = preSum.getOrDefault(currSum - target, 0);--newline--            preSum.put(currSum, preSum.getOrDefault(currSum, 0) + 1);--newline--            --newline--            res += helper(root.left, currSum, target, preSum) + helper(root.right, currSum, target, preSum);--newline--            preSum.put(currSum, preSum.get(currSum) - 1);--newline--            return res;--newline--        }--newline--    --newline--}", "modified_code": null, "total_cases": 126, "l_type": "java"}