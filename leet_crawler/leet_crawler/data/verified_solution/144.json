{"solution_code": "public class Solution {--newline--    public List<Integer> preorderTraversal(TreeNode node) {--newline--        List<Integer> list = new LinkedList<Integer>();--newline--        Stack<TreeNode> rights = new Stack<TreeNode>();--newline--        while(node != null) {--newline--            list.add(node.val);--newline--            if (node.right != null) {--newline--                rights.push(node.right);--newline--            }--newline--            node = node.left;--newline--            if (node == null && !rights.isEmpty()) {--newline--                node = rights.pop();--newline--            }--newline--        }--newline--        return list;--newline--    }--newline--}", "modified_code": null, "total_cases": 67, "l_type": "java"}