{"solution_code": "public class Solution {--newline--    public int strongPasswordChecker(String s) {--newline--        int res = 0, a = 1, A = 1, d = 1;--newline--        char[] carr = s.toCharArray();--newline--        int[] arr = new int[carr.length];--newline--            --newline--        for (int i = 0; i < arr.length;) {--newline--            if (Character.isLowerCase(carr[i])) a = 0;--newline--            if (Character.isUpperCase(carr[i])) A = 0;--newline--            if (Character.isDigit(carr[i])) d = 0;--newline--                --newline--            int j = i;--newline--            while (i < carr.length && carr[i] == carr[j]) i++;--newline--            arr[j] = i - j;--newline--        }--newline--            --newline--        int total_missing = (a + A + d);--newline--    --newline--        if (arr.length < 6) {--newline--            res += total_missing + Math.max(0, 6 - (arr.length + total_missing));--newline--                --newline--        } else {--newline--            int over_len = Math.max(arr.length - 20, 0), left_over = 0;--newline--            res += over_len;--newline--                --newline--            for (int k = 1; k < 3; k++) {--newline--                for (int i = 0; i < arr.length && over_len > 0; i++) {--newline--                    if (arr[i] < 3 || arr[i] % 3 != (k - 1)) continue;--newline--                    arr[i] -= Math.min(over_len, k);--newline--                    over_len -= k;--newline--                }--newline--            }--newline--                --newline--            for (int i = 0; i < arr.length; i++) {--newline--                if (arr[i] >= 3 && over_len > 0) {--newline--                    int need = arr[i] - 2;--newline--                    arr[i] -= over_len;--newline--                    over_len -= need;--newline--                }--newline--                    --newline--                if (arr[i] >= 3) left_over += arr[i] / 3;--newline--            }--newline--                --newline--            res += Math.max(total_missing, left_over);--newline--        }--newline--            --newline--        return res;--newline--    }--newline--    --newline--}", "modified_code": null, "total_cases": 42, "l_type": "java"}