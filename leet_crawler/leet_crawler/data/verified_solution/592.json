{"solution_code": "public class Solution {--newline--    public String fractionAddition(String expression) {--newline--        String[] fracs = expression.split(\"(?=[-,+])\"); // splits input string into individual fractions--newline--        String res = \"0/1\";--newline--        for (String frac : fracs) res = add(res, frac); // add all fractions together--newline--        return res;--newline--    }--newline--    --newline--    public String add(String frac1, String frac2) {--newline--        int[] f1 = Stream.of(frac1.split(\"/\")).mapToInt(Integer::parseInt).toArray(), --newline--              f2 = Stream.of(frac2.split(\"/\")).mapToInt(Integer::parseInt).toArray();--newline--        int numer = f1[0]*f2[1] + f1[1]*f2[0], denom = f1[1]*f2[1];--newline--        String sign = \"\";--newline--        if (numer < 0) {sign = \"-\"; numer *= -1;}--newline--        return sign + numer/gcd(numer, denom) + \"/\" + denom/gcd(numer, denom); // construct reduced fraction--newline--    }--newline--    --newline--    // Computes gcd using Euclidean algorithm--newline--    public int gcd(int x, int y) { return x == 0 || y == 0 ? x + y : gcd(y, x % y); }--newline--    --newline--}", "modified_code": null, "total_cases": 105, "l_type": "java"}