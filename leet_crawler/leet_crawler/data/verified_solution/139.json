{"solution_code": "public class Solution {--newline--    public boolean wordBreak(String s, List<String> wordDict) {--newline--        Set<String> dict = new HashSet<String>(wordDict);--newline--        boolean[] f = new boolean[s.length() + 1];--newline--        --newline--        f[0] = true;--newline--        --newline--        --newline--        /* First DP--newline--        for(int i = 1; i <= s.length(); i++){--newline--            for(String str: dict){--newline--                if(str.length() <= i){--newline--                    if(f[i - str.length()]){--newline--                        if(s.substring(i-str.length(), i).equals(str)){--newline--                            f[i] = true;--newline--                            break;--newline--                        }--newline--                    }--newline--                }--newline--            }--newline--        }*/--newline--        --newline--        //Second DP--newline--        for(int i=1; i <= s.length(); i++){--newline--            for(int j=0; j < i; j++){--newline--                if(f[j] && dict.contains(s.substring(j, i))){--newline--                    f[i] = true;--newline--                    break;--newline--                }--newline--            }--newline--        }--newline--        --newline--        return f[s.length()];--newline--    }--newline--}", "modified_code": null, "total_cases": 34, "l_type": "java"}