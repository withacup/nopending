{"solution_code": "public class Solution {--newline--    public int longestPalindrome(String s) {--newline--            if(s==null || s.length()==0) return 0;--newline--            HashSet<Character> hs = new HashSet<Character>();--newline--            int count = 0;--newline--            for(int i=0; i<s.length(); i++){--newline--                if(hs.contains(s.charAt(i))){--newline--                    hs.remove(s.charAt(i));--newline--                    count++;--newline--                }else{--newline--                    hs.add(s.charAt(i));--newline--                }--newline--            }--newline--            if(!hs.isEmpty()) return count*2+1;--newline--            return count*2;--newline--    }--newline--    --newline--}", "modified_code": null, "total_cases": 95, "l_type": "java"}