{"solution_code": "public class Solution {--newline--    public List<Integer> spiralOrder(int[][] matrix) {--newline--        --newline--        List<Integer> res = new ArrayList<Integer>();--newline--        --newline--        if (matrix.length == 0) {--newline--            return res;--newline--        }--newline--        --newline--        int rowBegin = 0;--newline--        int rowEnd = matrix.length-1;--newline--        int colBegin = 0;--newline--        int colEnd = matrix[0].length - 1;--newline--        --newline--        while (rowBegin <= rowEnd && colBegin <= colEnd) {--newline--            // Traverse Right--newline--            for (int j = colBegin; j <= colEnd; j ++) {--newline--                res.add(matrix[rowBegin][j]);--newline--            }--newline--            rowBegin++;--newline--            --newline--            // Traverse Down--newline--            for (int j = rowBegin; j <= rowEnd; j ++) {--newline--                res.add(matrix[j][colEnd]);--newline--            }--newline--            colEnd--;--newline--            --newline--            if (rowBegin <= rowEnd) {--newline--                // Traverse Left--newline--                for (int j = colEnd; j >= colBegin; j --) {--newline--                    res.add(matrix[rowEnd][j]);--newline--                }--newline--            }--newline--            rowEnd--;--newline--            --newline--            if (colBegin <= colEnd) {--newline--                // Traver Up--newline--                for (int j = rowEnd; j >= rowBegin; j --) {--newline--                    res.add(matrix[j][colBegin]);--newline--                }--newline--            }--newline--            colBegin ++;--newline--        }--newline--        --newline--        return res;--newline--    }--newline--}", "modified_code": null, "total_cases": 22, "l_type": "java"}