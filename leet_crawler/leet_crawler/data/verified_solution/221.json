{"solution_code": "public class Solution {--newline--    public int maximalSquare(char[][] a) {--newline--        if(a.length == 0) return 0;--newline--        int m = a.length, n = a[0].length, result = 0;--newline--        int[][] b = new int[m+1][n+1];--newline--        for (int i = 1 ; i <= m; i++) {--newline--            for (int j = 1; j <= n; j++) {--newline--                if(a[i-1][j-1] == '1') {--newline--                    b[i][j] = Math.min(Math.min(b[i][j-1] , b[i-1][j-1]), b[i-1][j]) + 1;--newline--                    result = Math.max(b[i][j], result); // update result--newline--                }--newline--            }--newline--        }--newline--        return result*result;--newline--    }--newline--}", "modified_code": null, "total_cases": 68, "l_type": "java"}