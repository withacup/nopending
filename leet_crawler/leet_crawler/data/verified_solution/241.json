{"solution_code": "public class Solution {--newline--    public List<Integer> diffWaysToCompute(String input) {--newline--        List<Integer> ret = new LinkedList<Integer>();--newline--        for (int i=0; i<input.length(); i++) {--newline--            if (input.charAt(i) == '-' ||--newline--                input.charAt(i) == '*' ||--newline--                input.charAt(i) == '+' ) {--newline--                String part1 = input.substring(0, i);--newline--                String part2 = input.substring(i+1);--newline--                List<Integer> part1Ret = diffWaysToCompute(part1);--newline--                List<Integer> part2Ret = diffWaysToCompute(part2);--newline--                for (Integer p1 :   part1Ret) {--newline--                    for (Integer p2 :   part2Ret) {--newline--                        int c = 0;--newline--                        switch (input.charAt(i)) {--newline--                            case '+': c = p1+p2;--newline--                                break;--newline--                            case '-': c = p1-p2;--newline--                                break;--newline--                            case '*': c = p1*p2;--newline--                                break;--newline--                        }--newline--                        ret.add(c);--newline--                    }--newline--                }--newline--            }--newline--        }--newline--        if (ret.size() == 0) {--newline--            ret.add(Integer.valueOf(input));--newline--        }--newline--        return ret;--newline--    }--newline--}", "modified_code": null, "total_cases": 25, "l_type": "java"}