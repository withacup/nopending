{"solution_code": "public class Solution {--newline--    public void nextPermutation(int[] num) {--newline--        int n=num.length;--newline--        if(n<2)--newline--            return;--newline--        int index=n-1;        --newline--        while(index>0){--newline--            if(num[index-1]<num[index])--newline--                break;--newline--            index--;--newline--        }--newline--        if(index==0){--newline--            reverseSort(num,0,n-1);--newline--            return;--newline--        }--newline--        else{--newline--            int val=num[index-1];--newline--            int j=n-1;--newline--            while(j>=index){--newline--                if(num[j]>val)--newline--                    break;--newline--                j--;--newline--            }--newline--            swap(num,j,index-1);--newline--            reverseSort(num,index,n-1);--newline--            return;--newline--        }--newline--    }--newline--    --newline--    public void swap(int[] num, int i, int j){--newline--        int temp=0;--newline--        temp=num[i];--newline--        num[i]=num[j];--newline--        num[j]=temp;--newline--    }--newline--    --newline--    public void reverseSort(int[] num, int start, int end){   --newline--        if(start>end)--newline--            return;--newline--        for(int i=start;i<=(end+start)/2;i++)--newline--            swap(num,i,start+end-i);--newline--    }--newline--}", "modified_code": null, "total_cases": 265, "l_type": "java"}