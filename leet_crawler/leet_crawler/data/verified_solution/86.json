{"solution_code": "public class Solution {--newline--    public ListNode partition(ListNode head, int x) {--newline--        ListNode dummy1 = new ListNode(0), dummy2 = new ListNode(0);  //dummy heads of the 1st and 2nd queues--newline--        ListNode curr1 = dummy1, curr2 = dummy2;      //current tails of the two queues;--newline--        while (head!=null){--newline--            if (head.val<x) {--newline--                curr1.next = head;--newline--                curr1 = head;--newline--            }else {--newline--                curr2.next = head;--newline--                curr2 = head;--newline--            }--newline--            head = head.next;--newline--        }--newline--        curr2.next = null;          //important! avoid cycle in linked list. otherwise u will get TLE.--newline--        curr1.next = dummy2.next;--newline--        return dummy1.next;--newline--    }--newline--}", "modified_code": null, "total_cases": 166, "l_type": "java"}