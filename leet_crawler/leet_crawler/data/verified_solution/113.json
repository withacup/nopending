{"solution_code": "public class Solution {--newline--    public List<List<Integer>> pathSum(TreeNode root, int sum){--newline--        List<List<Integer>> result  = new LinkedList<List<Integer>>();--newline--        List<Integer> currentResult  = new LinkedList<Integer>();--newline--        pathSum(root,sum,currentResult,result);--newline--        return result;--newline--    }--newline--    --newline--    public void pathSum(TreeNode root, int sum, List<Integer> currentResult,--newline--            List<List<Integer>> result) {--newline--    --newline--        if (root == null)--newline--            return;--newline--        currentResult.add(new Integer(root.val));--newline--        if (root.left == null && root.right == null && sum == root.val) {--newline--            result.add(new LinkedList(currentResult));--newline--            currentResult.remove(currentResult.size() - 1);//don't forget to remove the last integer--newline--            return;--newline--        } else {--newline--            pathSum(root.left, sum - root.val, currentResult, result);--newline--            pathSum(root.right, sum - root.val, currentResult, result);--newline--        }--newline--        currentResult.remove(currentResult.size() - 1);--newline--    }--newline--}", "modified_code": null, "total_cases": 114, "l_type": "java"}