{"solution_code": "public class Solution {--newline--    public TreeNode deleteNode(TreeNode root, int key) {--newline--        if(root == null){--newline--            return null;--newline--        }--newline--        if(key < root.val){--newline--            root.left = deleteNode(root.left, key);--newline--        }else if(key > root.val){--newline--            root.right = deleteNode(root.right, key);--newline--        }else{--newline--            if(root.left == null){--newline--                return root.right;--newline--            }else if(root.right == null){--newline--                return root.left;--newline--            }--newline--            --newline--            TreeNode minNode = findMin(root.right);--newline--            root.val = minNode.val;--newline--            root.right = deleteNode(root.right, root.val);--newline--        }--newline--        return root;--newline--    }--newline--    --newline--    private TreeNode findMin(TreeNode node){--newline--        while(node.left != null){--newline--            node = node.left;--newline--        }--newline--        return node;--newline--    }--newline--    --newline--}", "modified_code": null, "total_cases": 85, "l_type": "java"}