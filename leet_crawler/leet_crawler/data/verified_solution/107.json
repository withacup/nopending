{"solution_code": "public class Solution {--newline--        public List<List<Integer>> levelOrderBottom(TreeNode root) {--newline--            List<List<Integer>> wrapList = new LinkedList<List<Integer>>();--newline--            levelMaker(wrapList, root, 0);--newline--            return wrapList;--newline--        }--newline--        --newline--        public void levelMaker(List<List<Integer>> list, TreeNode root, int level) {--newline--            if(root == null) return;--newline--            if(level >= list.size()) {--newline--                list.add(0, new LinkedList<Integer>());--newline--            }--newline--            levelMaker(list, root.left, level+1);--newline--            levelMaker(list, root.right, level+1);--newline--            list.get(list.size()-level-1).add(root.val);--newline--        }--newline--    }", "modified_code": null, "total_cases": 34, "l_type": "java"}