{"solution_code": "public class Solution {--newline--    public int[] findRightInterval(Interval[] intervals) {--newline--        int[] result = new int[intervals.length];--newline--        java.util.NavigableMap<Integer, Integer> intervalMap = new TreeMap<>();--newline--        --newline--        for (int i = 0; i < intervals.length; ++i) {--newline--            intervalMap.put(intervals[i].start, i);    --newline--        }--newline--        --newline--        for (int i = 0; i < intervals.length; ++i) {--newline--            Map.Entry<Integer, Integer> entry = intervalMap.ceilingEntry(intervals[i].end);--newline--            result[i] = (entry != null) ? entry.getValue() : -1;--newline--        }--newline--        --newline--        return result;--newline--    }--newline--}--newline--", "modified_code": null, "total_cases": 17, "l_type": "java"}