{"solution_code": "public class Solution {--newline--    public int lengthLongestPath(String input) {--newline--        String[] paths = input.split(\"\\n\");--newline--        int[] stack = new int[paths.length+1];--newline--        int maxLen = 0;--newline--        for(String s:paths){--newline--            int lev = s.lastIndexOf(\"\\t\")+1, curLen = stack[lev+1] = stack[lev]+s.length()-lev+1;--newline--            if(s.contains(\".\")) maxLen = Math.max(maxLen, curLen-1);--newline--        }--newline--        return maxLen;--newline--    }--newline--    --newline--}", "modified_code": null, "total_cases": 25, "l_type": "java"}