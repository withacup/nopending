{"solution_code": "public class Solution {--newline--    public String simplifyPath(String path) {--newline--        Deque<String> stack = new LinkedList<>();--newline--        Set<String> skip = new HashSet<>(Arrays.asList(\"..\",\".\",\"\"));--newline--        for (String dir : path.split(\"/\")) {--newline--            if (dir.equals(\"..\") && !stack.isEmpty()) stack.pop();--newline--            else if (!skip.contains(dir)) stack.push(dir);--newline--        }--newline--        String res = \"\";--newline--        for (String dir : stack) res = \"/\" + dir + res;--newline--        return res.isEmpty() ? \"/\" : res;--newline--    }--newline--    --newline--}", "modified_code": null, "total_cases": 252, "l_type": "java"}