{"solution_code": "public class Solution {--newline--    public int splitArray(int[] nums, int m) {--newline--        int max = 0; long sum = 0;--newline--        for (int num : nums) {--newline--            max = Math.max(num, max);--newline--            sum += num;--newline--        }--newline--        if (m == 1) return (int)sum;--newline--        //binary search--newline--        long l = max; long r = sum;--newline--        while (l <= r) {--newline--            long mid = (l + r)/ 2;--newline--            if (valid(mid, nums, m)) {--newline--                r = mid - 1;--newline--            } else {--newline--                l = mid + 1;--newline--            }--newline--        }--newline--        return (int)l;--newline--    }--newline--    public boolean valid(long target, int[] nums, int m) {--newline--        int count = 1;--newline--        long total = 0;--newline--        for(int num : nums) {--newline--            total += num;--newline--            if (total > target) {--newline--                total = num;--newline--                count++;--newline--                if (count > m) {--newline--                    return false;--newline--                }--newline--            }--newline--        }--newline--        return true;--newline--    }--newline--}--newline--", "modified_code": null, "total_cases": 27, "l_type": "java"}