{"solution_code": "public class Solution {--newline--    public boolean canPlaceFlowers(int[] flowerbed, int n) {--newline--        int count = 0;--newline--        for(int i = 0; i < flowerbed.length && count < n; i++) {--newline--            if(flowerbed[i] == 0) {--newline--         //get next and prev flower bed slot values. If i lies at the ends the next and prev are considered as 0. --newline--               int next = (i == flowerbed.length - 1) ? 0 : flowerbed[i + 1]; --newline--               int prev = (i == 0) ? 0 : flowerbed[i - 1];--newline--               if(next == 0 && prev == 0) {--newline--                   flowerbed[i] = 1;--newline--                   count++;--newline--               }--newline--            }--newline--        }--newline--        --newline--        return count == n;--newline--    }--newline--}--newline--", "modified_code": null, "total_cases": 123, "l_type": "java"}