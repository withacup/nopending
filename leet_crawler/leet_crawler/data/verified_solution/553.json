{"solution_code": "public class Solution {--newline--    class Result {--newline--        String str;--newline--        double val;--newline--    }--newline--    --newline--    public String optimalDivision(int[] nums) {--newline--        int len = nums.length;--newline--        return getMax(nums, 0, len - 1).str;--newline--    }--newline--    --newline--    private Result getMax(int[] nums, int start, int end) {--newline--        Result r = new Result();--newline--        r.val = -1.0;--newline--        --newline--        if (start == end) {--newline--            r.str = nums[start] + \"\";--newline--            r.val = (double)nums[start];--newline--        }--newline--        else if (start + 1 == end) {--newline--            r.str = nums[start] + \"/\" + nums[end];--newline--            r.val = (double)nums[start] / (double)nums[end];--newline--        }--newline--        else {--newline--            for (int i = start; i < end; i++) {--newline--                Result r1 = getMax(nums, start, i);--newline--                Result r2 = getMin(nums, i + 1, end);--newline--                if (r1.val / r2.val > r.val) {--newline--                    r.str = r1.str + \"/\" + (end - i >= 2 ? \"(\" + r2.str + \")\" : r2.str);--newline--                    r.val = r1.val / r2.val;--newline--                }--newline--            }--newline--        }--newline--        --newline--        //System.out.println(\"getMax \" + start + \" \" + end + \"->\" + r.str + \":\" + r.val);--newline--        return r;--newline--    }--newline--    --newline--    private Result getMin(int[] nums, int start, int end) {--newline--        Result r = new Result();--newline--        r.val = Double.MAX_VALUE;--newline--        --newline--        if (start == end) {--newline--            r.str = nums[start] + \"\";--newline--            r.val = (double)nums[start];--newline--        }--newline--        else if (start + 1 == end) {--newline--            r.str = nums[start] + \"/\" + nums[end];--newline--            r.val = (double)nums[start] / (double)nums[end];--newline--        }--newline--        else {--newline--            for (int i = start; i < end; i++) {--newline--                Result r1 = getMin(nums, start, i);--newline--                Result r2 = getMax(nums, i + 1, end);--newline--                if (r1.val / r2.val < r.val) {--newline--                    r.str = r1.str + \"/\" + (end - i >= 2 ? \"(\" + r2.str + \")\" : r2.str);--newline--                    r.val = r1.val / r2.val;--newline--                }--newline--            }--newline--        }--newline--        --newline--        //System.out.println(\"getMin \" + start + \" \" + end + \"->\" + r.str + \":\" + r.val);--newline--        return r;--newline--    }--newline--}--newline--", "modified_code": null, "total_cases": 93, "l_type": "java"}