{"solution_code": "public class Solution {--newline--    public int islandPerimeter(int[][] grid) {--newline--        int islands = 0, neighbours = 0;--newline----newline--        for (int i = 0; i < grid.length; i++) {--newline--            for (int j = 0; j < grid[i].length; j++) {--newline--                if (grid[i][j] == 1) {--newline--                    islands++; // count islands--newline--                    if (i < grid.length - 1 && grid[i + 1][j] == 1) neighbours++; // count down neighbours--newline--                    if (j < grid[i].length - 1 && grid[i][j + 1] == 1) neighbours++; // count right neighbours--newline--                }--newline--            }--newline--        }--newline----newline--        return islands * 4 - neighbours * 2;--newline--    }--newline--}--newline--", "modified_code": null, "total_cases": 5833, "l_type": "java"}