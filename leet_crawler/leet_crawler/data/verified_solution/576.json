{
    "solution_code": "public class Solution {--newline--    public int findPaths(int m, int n, int N, int i, int j) {--newline--        if (N <= 0) return 0;--newline--        --newline--        final int MOD = 1000000007;--newline--        int[][] count = new int[m][n];--newline--        count[i][j] = 1;--newline--        int result = 0;--newline--        --newline--        int[][] dirs = {{-1, 0}, {1, 0}, {0, -1}, {0, 1}};--newline--        --newline--        for (int step = 0; step < N; step++) {--newline--            int[][] temp = new int[m][n];--newline--            for (int r = 0; r < m; r++) {--newline--                for (int c = 0; c < n; c++) {--newline--                    for (int[] d : dirs) {--newline--                        int nr = r + d[0];--newline--                        int nc = c + d[1];--newline--                        if (nr < 0 || nr >= m || nc < 0 || nc >= n) {--newline--                            result = (result + count[r][c]) % MOD;--newline--                        }--newline--                        else {--newline--                            temp[nr][nc] = (temp[nr][nc] + count[r][c]) % MOD;--newline--                        }--newline--                    }--newline--                }--newline--            }--newline--            count = temp;--newline--        }--newline--        --newline--        return result;--newline--    }--newline--}--newline--",
    "l_type": "java",
    "modified_code": null,
    "total_cases": 94
}