{"solution_code": "public class Solution {--newline--    public int[] singleNumber(int[] nums) {--newline--        // Pass 1 : --newline--        // Get the XOR of the two numbers we need to find--newline--        int diff = 0;--newline--        for (int num : nums) {--newline--            diff ^= num;--newline--        }--newline--        // Get its last set bit--newline--        diff &= -diff;--newline--        --newline--        // Pass 2 :--newline--        int[] rets = {0, 0}; // this array stores the two numbers we will return--newline--        for (int num : nums)--newline--        {--newline--            if ((num & diff) == 0) // the bit is not set--newline--            {--newline--                rets[0] ^= num;--newline--            }--newline--            else // the bit is set--newline--            {--newline--                rets[1] ^= num;--newline--            }--newline--        }--newline--        return rets;--newline--    }--newline--}--newline--", "modified_code": null, "total_cases": 30, "l_type": "java"}