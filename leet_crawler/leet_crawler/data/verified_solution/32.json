{"solution_code": "public class Solution {--newline--    public int longestValidParentheses(String s) {--newline--        Stack<Integer> stack = new Stack<Integer>();--newline--        int max=0;--newline--        int left = -1;--newline--        for(int j=0;j<s.length();j++){--newline--            if(s.charAt(j)=='(') stack.push(j);            --newline--            else {--newline--                if (stack.isEmpty()) left=j;--newline--                else{--newline--                    stack.pop();--newline--                    if(stack.isEmpty()) max=Math.max(max,j-left);--newline--                    else max=Math.max(max,j-stack.peek());--newline--                }--newline--            }--newline--        }--newline--        return max;--newline--    }--newline--}--newline--", "modified_code": null, "total_cases": 229, "l_type": "java"}