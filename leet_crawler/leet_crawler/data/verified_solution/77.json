{"solution_code": "public class Solution {--newline--        public static List<List<Integer>> combine(int n, int k) {--newline--            List<List<Integer>> combs = new ArrayList<List<Integer>>();--newline--            combine(combs, new ArrayList<Integer>(), 1, n, k);--newline--            return combs;--newline--        }--newline--        public static void combine(List<List<Integer>> combs, List<Integer> comb, int start, int n, int k) {--newline--            if(k==0) {--newline--                combs.add(new ArrayList<Integer>(comb));--newline--                return;--newline--            }--newline--            for(int i=start;i<=n;i++) {--newline--                comb.add(i);--newline--                combine(combs, comb, i+1, n, k-1);--newline--                comb.remove(comb.size()-1);--newline--            }--newline--        }--newline--}", "modified_code": null, "total_cases": 27, "l_type": "java"}