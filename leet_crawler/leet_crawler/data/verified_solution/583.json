{"solution_code": "public class Solution {--newline--    public int minDistance(String word1, String word2) {--newline--        int dp[][] = new int[word1.length()+1][word2.length()+1];--newline--        for(int i = 0; i <= word1.length(); i++) {--newline--            for(int j = 0; j <= word2.length(); j++) {--newline--                if(i == 0 || j == 0) dp[i][j] = 0;--newline--                else dp[i][j] = (word1.charAt(i-1) == word2.charAt(j-1)) ? dp[i-1][j-1] + 1--newline--                        : Math.max(dp[i-1][j], dp[i][j-1]);--newline--            }--newline--        }--newline--        int val =  dp[word1.length()][word2.length()];--newline--        return word1.length() - val + word2.length() - val;--newline--    }--newline--}", "modified_code": null, "total_cases": 1307, "l_type": "java"}