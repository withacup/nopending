{"solution_code": "public class Solution {--newline--      public int kthSmallest(TreeNode root, int k) {--newline--            Stack<TreeNode> st = new Stack<>();--newline--            --newline--            while (root != null) {--newline--                st.push(root);--newline--                root = root.left;--newline--            }--newline--                --newline--            while (k != 0) {--newline--                TreeNode n = st.pop();--newline--                k--;--newline--                if (k == 0) return n.val;--newline--                TreeNode right = n.right;--newline--                while (right != null) {--newline--                    st.push(right);--newline--                    right = right.left;--newline--                }--newline--            }--newline--            --newline--            return -1; // never hit if k is valid--newline--      }--newline--    --newline--}", "modified_code": null, "total_cases": 91, "l_type": "java"}