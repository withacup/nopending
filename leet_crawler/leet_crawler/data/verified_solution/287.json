{"solution_code": "public class Solution {--newline--    public int findDuplicate(int[] nums) {--newline--        int n = nums.length;--newline--        int slow = n;--newline--        int fast = n;--newline--        do{--newline--            slow = nums[slow-1];--newline--            fast = nums[nums[fast-1]-1];--newline--        }while(slow != fast);--newline--        slow = n;--newline--        while(slow != fast){--newline--            slow = nums[slow-1];--newline--            fast = nums[fast-1];--newline--        }--newline--        return slow;--newline--    }--newline--}", "modified_code": null, "total_cases": 53, "l_type": "java"}