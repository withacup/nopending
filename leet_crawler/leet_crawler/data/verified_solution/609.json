{"solution_code": "public class Solution {--newline--    public static List<List<String>> findDuplicate(String[] paths) {--newline--            Map<String, List<String>> map = new HashMap<>();--newline--            for(String path : paths) {--newline--                String[] tokens = path.split(\" \");--newline--                for(int i = 1; i < tokens.length; i++) {--newline--                    String file = tokens[i].substring(0, tokens[i].indexOf('('));--newline--                    String content = tokens[i].substring(tokens[i].indexOf('(') + 1, tokens[i].indexOf(')'));--newline--                    map.putIfAbsent(content, new ArrayList<>());--newline--                    map.get(content).add(tokens[0] + \"/\" + file);--newline--                }--newline--            }--newline--            return map.values().stream().filter(e -> e.size() > 1).collect(Collectors.toList());--newline--        }--newline--    --newline--}", "modified_code": null, "total_cases": 161, "l_type": "java"}