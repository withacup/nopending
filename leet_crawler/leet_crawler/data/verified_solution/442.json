{"solution_code": "public class Solution {--newline--    // when find a number i, flip the number at position i-1 to negative. --newline--    // if the number at position i-1 is already negative, i is the number that occurs twice.--newline--    --newline--    public List<Integer> findDuplicates(int[] nums) {--newline--        List<Integer> res = new ArrayList<>();--newline--        for (int i = 0; i < nums.length; ++i) {--newline--            int index = Math.abs(nums[i])-1;--newline--            if (nums[index] < 0)--newline--                res.add(Math.abs(index+1));--newline--            nums[index] = -nums[index];--newline--        }--newline--        return res;--newline--    }--newline--}--newline--", "modified_code": null, "total_cases": 28, "l_type": "java"}