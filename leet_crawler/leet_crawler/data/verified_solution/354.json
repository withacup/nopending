{"solution_code": "public class Solution {--newline--    public int maxEnvelopes(int[][] envelopes) {--newline--        if(envelopes == null || envelopes.length == 0 --newline--           || envelopes[0] == null || envelopes[0].length != 2)--newline--            return 0;--newline--        Arrays.sort(envelopes, new Comparator<int[]>(){--newline--            public int compare(int[] arr1, int[] arr2){--newline--                if(arr1[0] == arr2[0])--newline--                    return arr2[1] - arr1[1];--newline--                else--newline--                    return arr1[0] - arr2[0];--newline--           } --newline--        });--newline--        int dp[] = new int[envelopes.length];--newline--        int len = 0;--newline--        for(int[] envelope : envelopes){--newline--            int index = Arrays.binarySearch(dp, 0, len, envelope[1]);--newline--            if(index < 0)--newline--                index = -(index + 1);--newline--            dp[index] = envelope[1];--newline--            if(index == len)--newline--                len++;--newline--        }--newline--        return len;--newline--    }--newline--    --newline--}", "modified_code": null, "total_cases": 85, "l_type": "java"}