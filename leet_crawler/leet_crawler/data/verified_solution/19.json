{"solution_code": "public class Solution {--newline--    public ListNode removeNthFromEnd(ListNode head, int n) {--newline--        --newline--        ListNode start = new ListNode(0);--newline--        ListNode slow = start, fast = start;--newline--        slow.next = head;--newline--        --newline--        //Move fast in front so that the gap between slow and fast becomes n--newline--        for(int i=1; i<=n+1; i++)   {--newline--            fast = fast.next;--newline--        }--newline--        //Move fast to the end, maintaining the gap--newline--        while(fast != null) {--newline--            slow = slow.next;--newline--            fast = fast.next;--newline--        }--newline--        //Skip the desired node--newline--        slow.next = slow.next.next;--newline--        return start.next;--newline--    }--newline--}", "modified_code": null, "total_cases": 207, "l_type": "java"}