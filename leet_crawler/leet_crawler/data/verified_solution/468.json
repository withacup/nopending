{"solution_code": "public class Solution {--newline--    public String validIPAddress(String IP) {--newline--        if(isValidIPv4(IP)) return \"IPv4\";--newline--        else if(isValidIPv6(IP)) return \"IPv6\";--newline--        else return \"Neither\";--newline--    }--newline--    --newline--    public boolean isValidIPv4(String ip) {--newline--        if(ip.length()<7) return false;--newline--        if(ip.charAt(0)=='.') return false;--newline--        if(ip.charAt(ip.length()-1)=='.') return false;--newline--        String[] tokens = ip.split(\"\\\\.\");--newline--        if(tokens.length!=4) return false;--newline--        for(String token:tokens) {--newline--            if(!isValidIPv4Token(token)) return false;--newline--        }--newline--        return true;--newline--    }--newline--    public boolean isValidIPv4Token(String token) {--newline--        if(token.startsWith(\"0\") && token.length()>1) return false;--newline--        try {--newline--            int parsedInt = Integer.parseInt(token);--newline--            if(parsedInt<0 || parsedInt>255) return false;--newline--            if(parsedInt==0 && token.charAt(0)!='0') return false;--newline--        } catch(NumberFormatException nfe) {--newline--            return false;--newline--        }--newline--        return true;--newline--    }--newline--        --newline--    public boolean isValidIPv6(String ip) {--newline--        if(ip.length()<15) return false;--newline--        if(ip.charAt(0)==':') return false;--newline--        if(ip.charAt(ip.length()-1)==':') return false;--newline--        String[] tokens = ip.split(\":\");--newline--        if(tokens.length!=8) return false;--newline--        for(String token: tokens) {--newline--            if(!isValidIPv6Token(token)) return false;--newline--        }--newline--        return true;--newline--    }--newline--    public boolean isValidIPv6Token(String token) {--newline--        if(token.length()>4 || token.length()==0) return false;--newline--        char[] chars = token.toCharArray();--newline--        for(char c:chars) {--newline--            boolean isDigit = c>=48 && c<=57;--newline--            boolean isUppercaseAF = c>=65 && c<=70;--newline--            boolean isLowerCaseAF = c>=97 && c<=102;--newline--            if(!(isDigit || isUppercaseAF || isLowerCaseAF)) --newline--                return false;--newline--        }--newline--        return true;--newline--    }--newline--    --newline--}", "modified_code": null, "total_cases": 79, "l_type": "java"}