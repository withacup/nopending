{"solution_code": "public class Solution {--newline--    public int numberOfBoomerangs(int[][] points) {--newline--        if(points.length==0 || points[0].length==0) return 0;--newline--        int ret = 0;--newline--        for(int i=0;i<points.length;i++){--newline--            Map<Integer, Set<int[]>> map = new HashMap<>();--newline--            int[] p = points[i];--newline--            for(int j=0;j<points.length;j++){--newline--                if(j==i) continue;--newline--                int[] q = points[j];--newline--                int dis = getDis(p, q);--newline--                if(!map.containsKey(dis)) map.put(dis, new HashSet<int[]>());--newline--                map.get(dis).add(q);--newline--            }--newline--            for(Integer key : map.keySet()){--newline--                int size = map.get(key).size();--newline--                if(size>=2) ret += (size*(size-1));--newline--            }--newline--        }--newline--        return ret;--newline--    }--newline--    public int getDis(int[] p, int[] q){--newline--        int a = p[0]-q[0];--newline--        int b = p[1]-q[1];--newline--        return a*a+b*b;--newline--    }--newline--}--newline--", "modified_code": null, "total_cases": 31, "l_type": "java"}