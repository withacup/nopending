{"solution_code": "public class Solution {--newline--    public int findMinArrowShots(int[][] points) {--newline--        if(points==null || points.length==0 || points[0].length==0) return 0;--newline--        Arrays.sort(points, new Comparator<int[]>() {--newline--            public int compare(int[] a, int[] b) {--newline--                if(a[0]==b[0]) return a[1]-b[1];--newline--                else return a[0]-b[0];--newline--            }--newline--        });--newline--        --newline--        int minArrows = 1;--newline--        int arrowLimit = points[0][1];--newline--        for(int i=1;i<points.length;i++) {--newline--            int[] baloon = points[i];--newline--            if(baloon[0]<=arrowLimit) {--newline--                arrowLimit=Math.min(arrowLimit, baloon[1]);--newline--            } else {--newline--                minArrows++;--newline--                arrowLimit=baloon[1];--newline--            }--newline--        }--newline--        return minArrows;--newline--    }--newline--    --newline--}", "modified_code": null, "total_cases": 43, "l_type": "java"}