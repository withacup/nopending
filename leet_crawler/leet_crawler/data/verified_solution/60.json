{"solution_code": "public class Solution {--newline--    public String getPermutation(int n, int k) {--newline--            List<Integer> num = new LinkedList<Integer>();--newline--            for (int i = 1; i <= n; i++) num.add(i);--newline--            int[] fact = new int[n];  // factorial--newline--            fact[0] = 1;--newline--            for (int i = 1; i < n; i++) fact[i] = i*fact[i-1];--newline--            k = k-1;--newline--            StringBuilder sb = new StringBuilder();--newline--            for (int i = n; i > 0; i--){--newline--                int ind = k/fact[i-1];--newline--                k = k%fact[i-1];--newline--                sb.append(num.get(ind));--newline--                num.remove(ind);--newline--            }--newline--            return sb.toString();--newline--        }--newline--}", "modified_code": null, "total_cases": 200, "l_type": "java"}