{"solution_code": "public class Solution {--newline--    public int calculate(String s) {--newline--        if (s == null) return 0;--newline--        s = s.trim().replaceAll(\" +\", \"\");--newline--        int length = s.length();--newline--        --newline--        int res = 0;--newline--        long preVal = 0; // initial preVal is 0--newline--        char sign = '+'; // initial sign is +--newline--        int i = 0;--newline--        while (i < length) {--newline--            long curVal = 0;--newline--            while (i < length && (int)s.charAt(i) <= 57 && (int)s.charAt(i) >= 48) { // int--newline--                curVal = curVal*10 + (s.charAt(i) - '0');--newline--                i++;--newline--            }--newline--            if (sign == '+') {--newline--                res += preVal;  // update res--newline--                preVal = curVal;--newline--            } else if (sign == '-') {--newline--                res += preVal;  // update res--newline--                preVal = -curVal;--newline--            } else if (sign == '*') {--newline--                preVal = preVal * curVal; // not update res, combine preVal & curVal and keep loop--newline--            } else if (sign == '/') {--newline--                preVal = preVal / curVal; // not update res, combine preVal & curVal and keep loop--newline--            }--newline--            if (i < length) { // getting new sign--newline--                sign = s.charAt(i);--newline--                i++;--newline--            }--newline--        }--newline--        res += preVal;--newline--        return res;--newline--    }--newline--}", "modified_code": null, "total_cases": 109, "l_type": "java"}