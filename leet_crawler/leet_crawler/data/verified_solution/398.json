{
    "solution_code": "public class Solution {--newline--    int[] nums;--newline--    Random rand;--newline--    public Solution(int[] nums) {--newline--        this.nums = nums;--newline--        this.rand = new Random();--newline--    }--newline--    public int pick(int target) {--newline--        int total = 0;--newline--        int res = -1;--newline--        for (int i = 0; i < nums.length; i++) {--newline--            if (nums[i] == target) {--newline--                // randomly select an int from 0 to the nums of target. If x equals 0, set the res as the current index. The probability is always 1/nums for the latest appeared number. For example, 1 for 1st num, 1/2 for 2nd num, 1/3 for 3nd num (1/2 * 2/3 for each of the first 2 nums).--newline--                int x = rand.nextInt(++total); --newline--                res = x == 0 ? i : res;--newline--            }--newline--        }--newline--        return res;--newline--    }--newline--}--newline--",
    "l_type": "java",
    "modified_code": null,
    "total_cases": 13
}