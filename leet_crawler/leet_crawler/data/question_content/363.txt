---CONTENT_BEGIN---
Given a non-empty 2D matrix matrix and an integer k, find the max sum of a rectangle in the matrix such that its sum is no larger than k.

Example:
Given matrix = [
  [1,  0, 1],
  [0, -2, 3]
]
k = 2



The answer is 2. Because the sum of rectangle [[0, 1], [-2, 3]] is 2 and 2 is the max number no larger than k (k = 2).

Note:

The rectangle inside the matrix must have an area > 0.
What if the number of rows is much larger than the number of columns?



Credits:Special thanks to @fujiaozhu for adding this problem and creating all test cases.
---CONTENT_END---
---SCRIPT_BEGIN---
[{"defaultCode": "class Solution {--newline--public:--newline--    int maxSumSubmatrix(vector<vector<int>>& matrix, int k) {--newline--        --newline--    }--newline--};", "value": "cpp", "text": "C++"}, {"defaultCode": "public class Solution {--newline--    public int maxSumSubmatrix(int[][] matrix, int k) {--newline--        --newline--    }--newline--}", "value": "java", "text": "Java"}, {"defaultCode": "class Solution(object):--newline--    def maxSumSubmatrix(self, matrix, k):--newline--        '''--newline--        :type matrix: List[List[int]]--newline--        :type k: int--newline--        :rtype: int--newline--        '''--newline--        ", "value": "python", "text": "Python"}, {"defaultCode": "int maxSumSubmatrix(int** matrix, int matrixRowSize, int matrixColSize, int k) {--newline--    --newline--}", "value": "c", "text": "C"}, {"defaultCode": "public class Solution {--newline--    public int MaxSumSubmatrix(int[,] matrix, int k) {--newline--        --newline--    }--newline--}", "value": "csharp", "text": "C#"}, {"defaultCode": "/**--newline-- * @param {number[][]} matrix--newline-- * @param {number} k--newline-- * @return {number}--newline-- */--newline--var maxSumSubmatrix = function(matrix, k) {--newline--    --newline--};", "value": "javascript", "text": "JavaScript"}, {"defaultCode": "# @param {Integer[][]} matrix--newline--# @param {Integer} k--newline--# @return {Integer}--newline--def max_sum_submatrix(matrix, k)--newline--    --newline--end", "value": "ruby", "text": "Ruby"}, {"defaultCode": "class Solution {--newline--    func maxSumSubmatrix(_ matrix: [[Int]], _ k: Int) -> Int {--newline--        --newline--    }--newline--}", "value": "swift", "text": "Swift"}, {"defaultCode": "func maxSumSubmatrix(matrix [][]int, k int) int {--newline--    --newline--}", "value": "golang", "text": "Go"}]
---SCRIPT_END---
