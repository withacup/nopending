---CONTENT_BEGIN---
Implement pow(x, n).

---CONTENT_END---
---SCRIPT_BEGIN---
[{"defaultCode": "class Solution {--newline--public:--newline--    double myPow(double x, int n) {--newline--        --newline--    }--newline--};", "value": "cpp", "text": "C++"}, {"defaultCode": "public class Solution {--newline--    public double myPow(double x, int n) {--newline--        --newline--    }--newline--}", "value": "java", "text": "Java"}, {"defaultCode": "class Solution(object):--newline--    def myPow(self, x, n):--newline--        '''--newline--        :type x: float--newline--        :type n: int--newline--        :rtype: float--newline--        '''--newline--        ", "value": "python", "text": "Python"}, {"defaultCode": "double myPow(double x, int n) {--newline--    --newline--}", "value": "c", "text": "C"}, {"defaultCode": "public class Solution {--newline--    public double MyPow(double x, int n) {--newline--        --newline--    }--newline--}", "value": "csharp", "text": "C#"}, {"defaultCode": "/**--newline-- * @param {number} x--newline-- * @param {number} n--newline-- * @return {number}--newline-- */--newline--var myPow = function(x, n) {--newline--    --newline--};", "value": "javascript", "text": "JavaScript"}, {"defaultCode": "# @param {Float} x--newline--# @param {Integer} n--newline--# @return {Float}--newline--def my_pow(x, n)--newline--    --newline--end", "value": "ruby", "text": "Ruby"}, {"defaultCode": "class Solution {--newline--    func myPow(_ x: Double, _ n: Int) -> Double {--newline--        --newline--    }--newline--}", "value": "swift", "text": "Swift"}, {"defaultCode": "func myPow(x float64, n int) float64 {--newline--    --newline--}", "value": "golang", "text": "Go"}]
---SCRIPT_END---
