---CONTENT_BEGIN---

Given an array nums, write a function to move all 0's to the end of it while maintaining the relative order of the non-zero elements.



For example, given nums  = [0, 1, 0, 3, 12], after calling your function, nums should be [1, 3, 12, 0, 0].



Note:

You must do this in-place without making a copy of the array.
Minimize the total number of operations.



Credits:Special thanks to @jianchao.li.fighter for adding this problem and creating all test cases.
---CONTENT_END---
---SCRIPT_BEGIN---
[{"defaultCode": "class Solution {--newline--public:--newline--    void moveZeroes(vector<int>& nums) {--newline--        --newline--    }--newline--};", "value": "cpp", "text": "C++"}, {"defaultCode": "public class Solution {--newline--    public void moveZeroes(int[] nums) {--newline--        --newline--    }--newline--}", "value": "java", "text": "Java"}, {"defaultCode": "class Solution(object):--newline--    def moveZeroes(self, nums):--newline--        '''--newline--        :type nums: List[int]--newline--        :rtype: void Do not return anything, modify nums in-place instead.--newline--        '''--newline--        ", "value": "python", "text": "Python"}, {"defaultCode": "void moveZeroes(int* nums, int numsSize) {--newline--    --newline--}", "value": "c", "text": "C"}, {"defaultCode": "public class Solution {--newline--    public void MoveZeroes(int[] nums) {--newline--        --newline--    }--newline--}", "value": "csharp", "text": "C#"}, {"defaultCode": "/**--newline-- * @param {number[]} nums--newline-- * @return {void} Do not return anything, modify nums in-place instead.--newline-- */--newline--var moveZeroes = function(nums) {--newline--    --newline--};", "value": "javascript", "text": "JavaScript"}, {"defaultCode": "# @param {Integer[]} nums--newline--# @return {Void} Do not return anything, modify nums in-place instead.--newline--def move_zeroes(nums)--newline--    --newline--end", "value": "ruby", "text": "Ruby"}, {"defaultCode": "class Solution {--newline--    func moveZeroes(_ nums: inout [Int]) {--newline--        --newline--    }--newline--}", "value": "swift", "text": "Swift"}, {"defaultCode": "func moveZeroes(nums []int)  {--newline--    --newline--}", "value": "golang", "text": "Go"}]
---SCRIPT_END---
