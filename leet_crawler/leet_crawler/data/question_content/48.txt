---CONTENT_BEGIN---
You are given an n x n 2D matrix representing an image.
Rotate the image by 90 degrees (clockwise).
Follow up:
Could you do this in-place?
---CONTENT_END---
---SCRIPT_BEGIN---
[{"defaultCode": "class Solution {--newline--public:--newline--    void rotate(vector<vector<int>>& matrix) {--newline--        --newline--    }--newline--};", "value": "cpp", "text": "C++"}, {"defaultCode": "public class Solution {--newline--    public void rotate(int[][] matrix) {--newline--        --newline--    }--newline--}", "value": "java", "text": "Java"}, {"defaultCode": "class Solution(object):--newline--    def rotate(self, matrix):--newline--        '''--newline--        :type matrix: List[List[int]]--newline--        :rtype: void Do not return anything, modify matrix in-place instead.--newline--        '''--newline--        ", "value": "python", "text": "Python"}, {"defaultCode": "void rotate(int** matrix, int matrixRowSize, int matrixColSize) {--newline--    --newline--}", "value": "c", "text": "C"}, {"defaultCode": "public class Solution {--newline--    public void Rotate(int[,] matrix) {--newline--        --newline--    }--newline--}", "value": "csharp", "text": "C#"}, {"defaultCode": "/**--newline-- * @param {number[][]} matrix--newline-- * @return {void} Do not return anything, modify matrix in-place instead.--newline-- */--newline--var rotate = function(matrix) {--newline--    --newline--};", "value": "javascript", "text": "JavaScript"}, {"defaultCode": "# @param {Integer[][]} matrix--newline--# @return {Void} Do not return anything, modify matrix in-place instead.--newline--def rotate(matrix)--newline--    --newline--end", "value": "ruby", "text": "Ruby"}, {"defaultCode": "class Solution {--newline--    func rotate(_ matrix: inout [[Int]]) {--newline--        --newline--    }--newline--}", "value": "swift", "text": "Swift"}, {"defaultCode": "func rotate(matrix [][]int)  {--newline--    --newline--}", "value": "golang", "text": "Go"}]
---SCRIPT_END---
