---CONTENT_BEGIN---
Write a function to find the longest common prefix string amongst an array of strings.

---CONTENT_END---
---SCRIPT_BEGIN---
[{"defaultCode": "class Solution {--newline--public:--newline--    string longestCommonPrefix(vector<string>& strs) {--newline--        --newline--    }--newline--};", "value": "cpp", "text": "C++"}, {"defaultCode": "public class Solution {--newline--    public String longestCommonPrefix(String[] strs) {--newline--        --newline--    }--newline--}", "value": "java", "text": "Java"}, {"defaultCode": "class Solution(object):--newline--    def longestCommonPrefix(self, strs):--newline--        '''--newline--        :type strs: List[str]--newline--        :rtype: str--newline--        '''--newline--        ", "value": "python", "text": "Python"}, {"defaultCode": "char* longestCommonPrefix(char** strs, int strsSize) {--newline--    --newline--}", "value": "c", "text": "C"}, {"defaultCode": "public class Solution {--newline--    public string LongestCommonPrefix(string[] strs) {--newline--        --newline--    }--newline--}", "value": "csharp", "text": "C#"}, {"defaultCode": "/**--newline-- * @param {string[]} strs--newline-- * @return {string}--newline-- */--newline--var longestCommonPrefix = function(strs) {--newline--    --newline--};", "value": "javascript", "text": "JavaScript"}, {"defaultCode": "# @param {String[]} strs--newline--# @return {String}--newline--def longest_common_prefix(strs)--newline--    --newline--end", "value": "ruby", "text": "Ruby"}, {"defaultCode": "class Solution {--newline--    func longestCommonPrefix(_ strs: [String]) -> String {--newline--        --newline--    }--newline--}", "value": "swift", "text": "Swift"}, {"defaultCode": "func longestCommonPrefix(strs []string) string {--newline--    --newline--}", "value": "golang", "text": "Go"}]
---SCRIPT_END---
