---CONTENT_BEGIN---
Say you have an array for which the ith element is the price of a given stock on day i.

Design an algorithm to find the maximum profit. You may complete at most k transactions.

Note:
You may not engage in multiple transactions at the same time (ie, you must sell the stock before you buy again).

Credits:Special thanks to @Freezen for adding this problem and creating all test cases.
---CONTENT_END---
---SCRIPT_BEGIN---
[{"defaultCode": "class Solution {--newline--public:--newline--    int maxProfit(int k, vector<int>& prices) {--newline--        --newline--    }--newline--};", "value": "cpp", "text": "C++"}, {"defaultCode": "public class Solution {--newline--    public int maxProfit(int k, int[] prices) {--newline--        --newline--    }--newline--}", "value": "java", "text": "Java"}, {"defaultCode": "class Solution(object):--newline--    def maxProfit(self, k, prices):--newline--        '''--newline--        :type k: int--newline--        :type prices: List[int]--newline--        :rtype: int--newline--        '''--newline--        ", "value": "python", "text": "Python"}, {"defaultCode": "int maxProfit(int k, int* prices, int pricesSize) {--newline--    --newline--}", "value": "c", "text": "C"}, {"defaultCode": "public class Solution {--newline--    public int MaxProfit(int k, int[] prices) {--newline--        --newline--    }--newline--}", "value": "csharp", "text": "C#"}, {"defaultCode": "/**--newline-- * @param {number} k--newline-- * @param {number[]} prices--newline-- * @return {number}--newline-- */--newline--var maxProfit = function(k, prices) {--newline--    --newline--};", "value": "javascript", "text": "JavaScript"}, {"defaultCode": "# @param {Integer} k--newline--# @param {Integer[]} prices--newline--# @return {Integer}--newline--def max_profit(k, prices)--newline--    --newline--end", "value": "ruby", "text": "Ruby"}, {"defaultCode": "class Solution {--newline--    func maxProfit(_ k: Int, _ prices: [Int]) -> Int {--newline--        --newline--    }--newline--}", "value": "swift", "text": "Swift"}, {"defaultCode": "func maxProfit(k int, prices []int) int {--newline--    --newline--}", "value": "golang", "text": "Go"}]
---SCRIPT_END---
