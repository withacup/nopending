---CONTENT_BEGIN---

Design a stack that supports push, pop, top, and retrieving the minimum element in constant time.


push(x) -- Push element x onto stack.


pop() -- Removes the element on top of the stack.


top() -- Get the top element.


getMin() -- Retrieve the minimum element in the stack.




Example:

MinStack minStack = new MinStack();
minStack.push(-2);
minStack.push(0);
minStack.push(-3);
minStack.getMin();   --> Returns -3.
minStack.pop();
minStack.top();      --> Returns 0.
minStack.getMin();   --> Returns -2.


---CONTENT_END---
---SCRIPT_BEGIN---
[{"defaultCode": "class MinStack {--newline--public:--newline--    /** initialize your data structure here. */--newline--    MinStack() {--newline--        --newline--    }--newline--    --newline--    void push(int x) {--newline--        --newline--    }--newline--    --newline--    void pop() {--newline--        --newline--    }--newline--    --newline--    int top() {--newline--        --newline--    }--newline--    --newline--    int getMin() {--newline--        --newline--    }--newline--};--newline----newline--/**--newline-- * Your MinStack object will be instantiated and called as such:--newline-- * MinStack obj = new MinStack();--newline-- * obj.push(x);--newline-- * obj.pop();--newline-- * int param_3 = obj.top();--newline-- * int param_4 = obj.getMin();--newline-- */", "value": "cpp", "text": "C++"}, {"defaultCode": "public class MinStack {--newline----newline--    /** initialize your data structure here. */--newline--    public MinStack() {--newline--        --newline--    }--newline--    --newline--    public void push(int x) {--newline--        --newline--    }--newline--    --newline--    public void pop() {--newline--        --newline--    }--newline--    --newline--    public int top() {--newline--        --newline--    }--newline--    --newline--    public int getMin() {--newline--        --newline--    }--newline--}--newline----newline--/**--newline-- * Your MinStack object will be instantiated and called as such:--newline-- * MinStack obj = new MinStack();--newline-- * obj.push(x);--newline-- * obj.pop();--newline-- * int param_3 = obj.top();--newline-- * int param_4 = obj.getMin();--newline-- */", "value": "java", "text": "Java"}, {"defaultCode": "class MinStack(object):--newline----newline--    def __init__(self):--newline--        '''--newline--        initialize your data structure here.--newline--        '''--newline--        --newline----newline--    def push(self, x):--newline--        '''--newline--        :type x: int--newline--        :rtype: void--newline--        '''--newline--        --newline----newline--    def pop(self):--newline--        '''--newline--        :rtype: void--newline--        '''--newline--        --newline----newline--    def top(self):--newline--        '''--newline--        :rtype: int--newline--        '''--newline--        --newline----newline--    def getMin(self):--newline--        '''--newline--        :rtype: int--newline--        '''--newline--        --newline----newline----newline--# Your MinStack object will be instantiated and called as such:--newline--# obj = MinStack()--newline--# obj.push(x)--newline--# obj.pop()--newline--# param_3 = obj.top()--newline--# param_4 = obj.getMin()", "value": "python", "text": "Python"}, {"defaultCode": "typedef struct {--newline--    --newline--} MinStack;--newline----newline--/** initialize your data structure here. */--newline--MinStack* minStackCreate(int maxSize) {--newline--    --newline--}--newline----newline--void minStackPush(MinStack* obj, int x) {--newline--    --newline--}--newline----newline--void minStackPop(MinStack* obj) {--newline--    --newline--}--newline----newline--int minStackTop(MinStack* obj) {--newline--    --newline--}--newline----newline--int minStackGetMin(MinStack* obj) {--newline--    --newline--}--newline----newline--void minStackFree(MinStack* obj) {--newline--    --newline--}--newline----newline--/**--newline-- * Your MinStack struct will be instantiated and called as such:--newline-- * struct MinStack* obj = minStackCreate(maxSize);--newline-- * minStackPush(obj, x);--newline-- * minStackPop(obj);--newline-- * int param_3 = minStackTop(obj);--newline-- * int param_4 = minStackGetMin(obj);--newline-- * minStackFree(obj);--newline-- */", "value": "c", "text": "C"}, {"defaultCode": "public class MinStack {--newline----newline--    /** initialize your data structure here. */--newline--    public MinStack() {--newline--        --newline--    }--newline--    --newline--    public void Push(int x) {--newline--        --newline--    }--newline--    --newline--    public void Pop() {--newline--        --newline--    }--newline--    --newline--    public int Top() {--newline--        --newline--    }--newline--    --newline--    public int GetMin() {--newline--        --newline--    }--newline--}--newline----newline--/**--newline-- * Your MinStack object will be instantiated and called as such:--newline-- * MinStack obj = new MinStack();--newline-- * obj.Push(x);--newline-- * obj.Pop();--newline-- * int param_3 = obj.Top();--newline-- * int param_4 = obj.GetMin();--newline-- */", "value": "csharp", "text": "C#"}, {"defaultCode": "/**--newline-- * initialize your data structure here.--newline-- */--newline--var MinStack = function() {--newline--    --newline--};--newline----newline--/** --newline-- * @param {number} x--newline-- * @return {void}--newline-- */--newline--MinStack.prototype.push = function(x) {--newline--    --newline--};--newline----newline--/**--newline-- * @return {void}--newline-- */--newline--MinStack.prototype.pop = function() {--newline--    --newline--};--newline----newline--/**--newline-- * @return {number}--newline-- */--newline--MinStack.prototype.top = function() {--newline--    --newline--};--newline----newline--/**--newline-- * @return {number}--newline-- */--newline--MinStack.prototype.getMin = function() {--newline--    --newline--};--newline----newline--/** --newline-- * Your MinStack object will be instantiated and called as such:--newline-- * var obj = Object.create(MinStack).createNew()--newline-- * obj.push(x)--newline-- * obj.pop()--newline-- * var param_3 = obj.top()--newline-- * var param_4 = obj.getMin()--newline-- */", "value": "javascript", "text": "JavaScript"}, {"defaultCode": "class MinStack--newline----newline--=begin--newline--    initialize your data structure here.--newline--=end--newline--    def initialize()--newline--        --newline--    end--newline----newline----newline--=begin--newline--    :type x: Integer--newline--    :rtype: Void--newline--=end--newline--    def push(x)--newline--        --newline--    end--newline----newline----newline--=begin--newline--    :rtype: Void--newline--=end--newline--    def pop()--newline--        --newline--    end--newline----newline----newline--=begin--newline--    :rtype: Integer--newline--=end--newline--    def top()--newline--        --newline--    end--newline----newline----newline--=begin--newline--    :rtype: Integer--newline--=end--newline--    def get_min()--newline--        --newline--    end--newline----newline----newline--end--newline----newline--# Your MinStack object will be instantiated and called as such:--newline--# obj = MinStack.new()--newline--# obj.push(x)--newline--# obj.pop()--newline--# param_3 = obj.top()--newline--# param_4 = obj.get_min()", "value": "ruby", "text": "Ruby"}, {"defaultCode": "type MinStack struct {--newline--    --newline--}--newline----newline----newline--/** initialize your data structure here. */--newline--func Constructor() MinStack {--newline--    --newline--}--newline----newline----newline--func (this *MinStack) Push(x int)  {--newline--    --newline--}--newline----newline----newline--func (this *MinStack) Pop()  {--newline--    --newline--}--newline----newline----newline--func (this *MinStack) Top() int {--newline--    --newline--}--newline----newline----newline--func (this *MinStack) GetMin() int {--newline--    --newline--}--newline----newline----newline--/**--newline-- * Your MinStack object will be instantiated and called as such:--newline-- * obj := Constructor();--newline-- * obj.Push(x);--newline-- * obj.Pop();--newline-- * param_3 := obj.Top();--newline-- * param_4 := obj.GetMin();--newline-- */", "value": "golang", "text": "Go"}]
---SCRIPT_END---
