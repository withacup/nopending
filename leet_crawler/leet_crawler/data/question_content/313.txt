---CONTENT_BEGIN---

    Write a program to find the nth super ugly number.



    Super ugly numbers are positive numbers whose all prime factors are in the given prime list
    primes of size k. For example, [1, 2, 4, 7, 8, 13, 14, 16, 19, 26, 28, 32]
 is the sequence of the first 12 super ugly numbers given primes
    = [2, 7, 13, 19] of size 4.



    Note:
    (1) 1 is a super ugly number for any given primes.
    (2) The given numbers in primes are in ascending order.
    (3) 0 < k &le; 100, 0 < n &le; 106, 0 < primes[i] < 1000.
    (4) The nth super ugly number is guaranteed to fit in a 32-bit signed integer.


Credits:Special thanks to @dietpepsi for adding this problem and creating all test cases.
---CONTENT_END---
---SCRIPT_BEGIN---
[{"defaultCode": "class Solution {--newline--public:--newline--    int nthSuperUglyNumber(int n, vector<int>& primes) {--newline--        --newline--    }--newline--};", "value": "cpp", "text": "C++"}, {"defaultCode": "public class Solution {--newline--    public int nthSuperUglyNumber(int n, int[] primes) {--newline--        --newline--    }--newline--}", "value": "java", "text": "Java"}, {"defaultCode": "class Solution(object):--newline--    def nthSuperUglyNumber(self, n, primes):--newline--        '''--newline--        :type n: int--newline--        :type primes: List[int]--newline--        :rtype: int--newline--        '''--newline--        ", "value": "python", "text": "Python"}, {"defaultCode": "int nthSuperUglyNumber(int n, int* primes, int primesSize) {--newline--    --newline--}", "value": "c", "text": "C"}, {"defaultCode": "public class Solution {--newline--    public int NthSuperUglyNumber(int n, int[] primes) {--newline--        --newline--    }--newline--}", "value": "csharp", "text": "C#"}, {"defaultCode": "/**--newline-- * @param {number} n--newline-- * @param {number[]} primes--newline-- * @return {number}--newline-- */--newline--var nthSuperUglyNumber = function(n, primes) {--newline--    --newline--};", "value": "javascript", "text": "JavaScript"}, {"defaultCode": "# @param {Integer} n--newline--# @param {Integer[]} primes--newline--# @return {Integer}--newline--def nth_super_ugly_number(n, primes)--newline--    --newline--end", "value": "ruby", "text": "Ruby"}, {"defaultCode": "class Solution {--newline--    func nthSuperUglyNumber(_ n: Int, _ primes: [Int]) -> Int {--newline--        --newline--    }--newline--}", "value": "swift", "text": "Swift"}, {"defaultCode": "func nthSuperUglyNumber(n int, primes []int) int {--newline--    --newline--}", "value": "golang", "text": "Go"}]
---SCRIPT_END---
