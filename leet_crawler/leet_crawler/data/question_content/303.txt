---CONTENT_BEGIN---
Given an integer array nums, find the sum of the elements between indices i and j (i &le; j), inclusive.

Example:

Given nums = [-2, 0, 3, -5, 2, -1]

sumRange(0, 2) -> 1
sumRange(2, 5) -> -1
sumRange(0, 5) -> -3



Note:

You may assume that the array does not change.
There are many calls to sumRange function.


---CONTENT_END---
---SCRIPT_BEGIN---
[{"defaultCode": "class NumArray {--newline--public:--newline--    NumArray(vector<int> nums) {--newline--        --newline--    }--newline--    --newline--    int sumRange(int i, int j) {--newline--        --newline--    }--newline--};--newline----newline--/**--newline-- * Your NumArray object will be instantiated and called as such:--newline-- * NumArray obj = new NumArray(nums);--newline-- * int param_1 = obj.sumRange(i,j);--newline-- */", "value": "cpp", "text": "C++"}, {"defaultCode": "public class NumArray {--newline----newline--    public NumArray(int[] nums) {--newline--        --newline--    }--newline--    --newline--    public int sumRange(int i, int j) {--newline--        --newline--    }--newline--}--newline----newline--/**--newline-- * Your NumArray object will be instantiated and called as such:--newline-- * NumArray obj = new NumArray(nums);--newline-- * int param_1 = obj.sumRange(i,j);--newline-- */", "value": "java", "text": "Java"}, {"defaultCode": "class NumArray(object):--newline----newline--    def __init__(self, nums):--newline--        '''--newline--        :type nums: List[int]--newline--        '''--newline--        --newline----newline--    def sumRange(self, i, j):--newline--        '''--newline--        :type i: int--newline--        :type j: int--newline--        :rtype: int--newline--        '''--newline--        --newline----newline----newline--# Your NumArray object will be instantiated and called as such:--newline--# obj = NumArray(nums)--newline--# param_1 = obj.sumRange(i,j)", "value": "python", "text": "Python"}, {"defaultCode": "typedef struct {--newline--    --newline--} NumArray;--newline----newline--NumArray* numArrayCreate(int* nums, int numsSize) {--newline--    --newline--}--newline----newline--int numArraySumRange(NumArray* obj, int i, int j) {--newline--    --newline--}--newline----newline--void numArrayFree(NumArray* obj) {--newline--    --newline--}--newline----newline--/**--newline-- * Your NumArray struct will be instantiated and called as such:--newline-- * struct NumArray* obj = numArrayCreate(nums, numsSize);--newline-- * int param_1 = numArraySumRange(obj, i, j);--newline-- * numArrayFree(obj);--newline-- */", "value": "c", "text": "C"}, {"defaultCode": "public class NumArray {--newline----newline--    public NumArray(int[] nums) {--newline--        --newline--    }--newline--    --newline--    public int SumRange(int i, int j) {--newline--        --newline--    }--newline--}--newline----newline--/**--newline-- * Your NumArray object will be instantiated and called as such:--newline-- * NumArray obj = new NumArray(nums);--newline-- * int param_1 = obj.SumRange(i,j);--newline-- */", "value": "csharp", "text": "C#"}, {"defaultCode": "/**--newline-- * @param {number[]} nums--newline-- */--newline--var NumArray = function(nums) {--newline--    --newline--};--newline----newline--/** --newline-- * @param {number} i --newline-- * @param {number} j--newline-- * @return {number}--newline-- */--newline--NumArray.prototype.sumRange = function(i, j) {--newline--    --newline--};--newline----newline--/** --newline-- * Your NumArray object will be instantiated and called as such:--newline-- * var obj = Object.create(NumArray).createNew(nums)--newline-- * var param_1 = obj.sumRange(i,j)--newline-- */", "value": "javascript", "text": "JavaScript"}, {"defaultCode": "class NumArray--newline----newline--=begin--newline--    :type nums: Integer[]--newline--=end--newline--    def initialize(nums)--newline--        --newline--    end--newline----newline----newline--=begin--newline--    :type i: Integer--newline--    :type j: Integer--newline--    :rtype: Integer--newline--=end--newline--    def sum_range(i, j)--newline--        --newline--    end--newline----newline----newline--end--newline----newline--# Your NumArray object will be instantiated and called as such:--newline--# obj = NumArray.new(nums)--newline--# param_1 = obj.sum_range(i,j)", "value": "ruby", "text": "Ruby"}, {"defaultCode": "type NumArray struct {--newline--    --newline--}--newline----newline----newline--func Constructor(nums []int) NumArray {--newline--    --newline--}--newline----newline----newline--func (this *NumArray) SumRange(i int, j int) int {--newline--    --newline--}--newline----newline----newline--/**--newline-- * Your NumArray object will be instantiated and called as such:--newline-- * obj := Constructor(nums);--newline-- * param_1 := obj.SumRange(i,j);--newline-- */", "value": "golang", "text": "Go"}]
---SCRIPT_END---
