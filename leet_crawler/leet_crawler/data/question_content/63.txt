---CONTENT_BEGIN---
Follow up for "Unique Paths":

Now consider if some obstacles are added to the grids. How many unique paths would there be?

An obstacle and empty space is marked as 1 and 0 respectively in the grid.

For example,
There is one obstacle in the middle of a 3x3 grid as illustrated below.

[
  [0,0,0],
  [0,1,0],
  [0,0,0]
]

The total number of unique paths is 2.

Note: m and n will be at most 100.
---CONTENT_END---
---SCRIPT_BEGIN---
[{"defaultCode": "class Solution {--newline--public:--newline--    int uniquePathsWithObstacles(vector<vector<int>>& obstacleGrid) {--newline--        --newline--    }--newline--};", "value": "cpp", "text": "C++"}, {"defaultCode": "public class Solution {--newline--    public int uniquePathsWithObstacles(int[][] obstacleGrid) {--newline--        --newline--    }--newline--}", "value": "java", "text": "Java"}, {"defaultCode": "class Solution(object):--newline--    def uniquePathsWithObstacles(self, obstacleGrid):--newline--        '''--newline--        :type obstacleGrid: List[List[int]]--newline--        :rtype: int--newline--        '''--newline--        ", "value": "python", "text": "Python"}, {"defaultCode": "int uniquePathsWithObstacles(int** obstacleGrid, int obstacleGridRowSize, int obstacleGridColSize) {--newline--    --newline--}", "value": "c", "text": "C"}, {"defaultCode": "public class Solution {--newline--    public int UniquePathsWithObstacles(int[,] obstacleGrid) {--newline--        --newline--    }--newline--}", "value": "csharp", "text": "C#"}, {"defaultCode": "/**--newline-- * @param {number[][]} obstacleGrid--newline-- * @return {number}--newline-- */--newline--var uniquePathsWithObstacles = function(obstacleGrid) {--newline--    --newline--};", "value": "javascript", "text": "JavaScript"}, {"defaultCode": "# @param {Integer[][]} obstacle_grid--newline--# @return {Integer}--newline--def unique_paths_with_obstacles(obstacle_grid)--newline--    --newline--end", "value": "ruby", "text": "Ruby"}, {"defaultCode": "class Solution {--newline--    func uniquePathsWithObstacles(_ obstacleGrid: [[Int]]) -> Int {--newline--        --newline--    }--newline--}", "value": "swift", "text": "Swift"}, {"defaultCode": "func uniquePathsWithObstacles(obstacleGrid [][]int) int {--newline--    --newline--}", "value": "golang", "text": "Go"}]
---SCRIPT_END---
