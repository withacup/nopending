---CONTENT_BEGIN---
The Hamming distance between two integers is the number of positions at which the corresponding bits are different.

Given two integers x and y, calculate the Hamming distance.

Note:
0 &le; x, y &lt; 231.


Example:

Input: x = 1, y = 4

Output: 2

Explanation:
1   (0 0 0 1)
4   (0 1 0 0)
       â   â

The above arrows point to positions where the corresponding bits are different.


---CONTENT_END---
---SCRIPT_BEGIN---
[{"defaultCode": "class Solution {--newline--public:--newline--    int hammingDistance(int x, int y) {--newline--        --newline--    }--newline--};", "value": "cpp", "text": "C++"}, {"defaultCode": "public class Solution {--newline--    public int hammingDistance(int x, int y) {--newline--        --newline--    }--newline--}", "value": "java", "text": "Java"}, {"defaultCode": "class Solution(object):--newline--    def hammingDistance(self, x, y):--newline--        '''--newline--        :type x: int--newline--        :type y: int--newline--        :rtype: int--newline--        '''", "value": "python", "text": "Python"}, {"defaultCode": "int hammingDistance(int x, int y) {--newline--    --newline--}", "value": "c", "text": "C"}, {"defaultCode": "public class Solution {--newline--    public int HammingDistance(int x, int y) {--newline--        --newline--    }--newline--}", "value": "csharp", "text": "C#"}, {"defaultCode": "/**--newline-- * @param {number} x--newline-- * @param {number} y--newline-- * @return {number}--newline-- */--newline--var hammingDistance = function(x, y) {--newline--    --newline--};", "value": "javascript", "text": "JavaScript"}, {"defaultCode": "# @param {Integer} x--newline--# @param {Integer} y--newline--# @return {Integer}--newline--def hamming_distance(x, y)--newline--    --newline--end", "value": "ruby", "text": "Ruby"}, {"defaultCode": "class Solution {--newline--    func hammingDistance(_ x: Int, _ y: Int) -> Int {--newline--        --newline--    }--newline--}", "value": "swift", "text": "Swift"}, {"defaultCode": "func hammingDistance(x int, y int) int {--newline--    --newline--}", "value": "golang", "text": "Go"}]
---SCRIPT_END---
