---CONTENT_BEGIN---
Given n points on a 2D plane, find the maximum number of points that lie on the same straight line.
---CONTENT_END---
---SCRIPT_BEGIN---
[{"defaultCode": "/**--newline-- * Definition for a point.--newline-- * struct Point {--newline-- *     int x;--newline-- *     int y;--newline-- *     Point() : x(0), y(0) {}--newline-- *     Point(int a, int b) : x(a), y(b) {}--newline-- * };--newline-- */--newline--class Solution {--newline--public:--newline--    int maxPoints(vector<Point>& points) {--newline--        --newline--    }--newline--};", "value": "cpp", "text": "C++"}, {"defaultCode": "/**--newline-- * Definition for a point.--newline-- * class Point {--newline-- *     int x;--newline-- *     int y;--newline-- *     Point() { x = 0; y = 0; }--newline-- *     Point(int a, int b) { x = a; y = b; }--newline-- * }--newline-- */--newline--public class Solution {--newline--    public int maxPoints(Point[] points) {--newline--        --newline--    }--newline--}", "value": "java", "text": "Java"}, {"defaultCode": "# Definition for a point.--newline--# class Point(object):--newline--#     def __init__(self, a=0, b=0):--newline--#         self.x = a--newline--#         self.y = b--newline----newline--class Solution(object):--newline--    def maxPoints(self, points):--newline--        '''--newline--        :type points: List[Point]--newline--        :rtype: int--newline--        '''--newline--        ", "value": "python", "text": "Python"}, {"defaultCode": "/**--newline-- * Definition for a point.--newline-- * struct Point {--newline-- *     int x;--newline-- *     int y;--newline-- * }--newline-- */--newline--int maxPoints(struct Point* points, int pointsSize) {--newline--    --newline--}", "value": "c", "text": "C"}, {"defaultCode": "/**--newline-- * Definition for a point.--newline-- * public class Point {--newline-- *     public int x;--newline-- *     public int y;--newline-- *     public Point() { x = 0; y = 0; }--newline-- *     public Point(int a, int b) { x = a; y = b; }--newline-- * }--newline-- */--newline--public class Solution {--newline--    public int MaxPoints(Point[] points) {--newline--        --newline--    }--newline--}", "value": "csharp", "text": "C#"}, {"defaultCode": "/**--newline-- * Definition for a point.--newline-- * function Point(x, y) {--newline-- *     this.x = x;--newline-- *     this.y = y;--newline-- * }--newline-- */--newline--/**--newline-- * @param {Point[]} points--newline-- * @return {number}--newline-- */--newline--var maxPoints = function(points) {--newline--    --newline--};", "value": "javascript", "text": "JavaScript"}, {"defaultCode": "# Definition for a point.--newline--# class Point--newline--#     attr_accessor :x, :y--newline--#     def initialize(x=0, y=0)--newline--#         @x = x--newline--#         @y = y--newline--#     end--newline--# end--newline----newline--# @param {Point[]} points--newline--# @return {Integer}--newline--def max_points(points)--newline--    --newline--end", "value": "ruby", "text": "Ruby"}, {"defaultCode": "/**--newline-- * Definition for a point.--newline-- * type Point struct {--newline-- *     X int--newline-- *     Y int--newline-- * }--newline-- */--newline--func maxPoints(points []Point) int {--newline--    --newline--}", "value": "golang", "text": "Go"}]
---SCRIPT_END---
