{
    "posts": [
        {
            "java": "public class Solution {--newline--    public int compareVersion(String version1, String version2) {--newline--        String[] levels1 = version1.split(\"\\\\.\");--newline--        String[] levels2 = version2.split(\"\\\\.\");--newline--        --newline--        int length = Math.max(levels1.length, levels2.length);--newline--        for (int i=0; i<length; i++) {--newline--        --tab--Integer v1 = i < levels1.length ? Integer.parseInt(levels1[i]) : 0;--newline--        --tab--Integer v2 = i < levels2.length ? Integer.parseInt(levels2[i]) : 0;--newline--        --tab--int compare = v1.compareTo(v2);--newline--        --tab--if (compare != 0) {--newline--        --tab----tab--return compare;--newline--        --tab--}--newline--        }--newline--        --newline--        return 0;--newline--    }--newline--}",
            "is_locked": false,
            "cpp": null,
            "python": null,
            "topic_title": "Accepted small Java solution."
        },
        {
            "java": null,
            "is_locked": false,
            "cpp": "class Solution {--newline--public:--newline--    int compareVersion(string version1, string version2) {--newline--        int i = 0; --newline--        int j = 0;--newline--        int n1 = version1.size(); --newline--        int n2 = version2.size();--newline--        --newline--        int num1 = 0;--newline--        int num2 = 0;--newline--        while(i<n1 || j<n2)--newline--        {--newline--            while(i<n1 && version1[i]!='.'){--newline--                num1 = num1*10+(version1[i]-'0');--newline--                i++;--newline--            }--newline--            --newline--            while(j<n2 && version2[j]!='.'){--newline--                num2 = num2*10+(version2[j]-'0');;--newline--                j++;--newline--            }--newline--            --newline--            if(num1>num2) return 1;--newline--            else if(num1 < num2) return -1;--newline--            --newline--            num1 = 0;--newline--            num2 = 0;--newline--            i++;--newline--            j++;--newline--        }--newline--        --newline--        return 0;--newline--    }--newline--}",
            "python": null,
            "topic_title": "My 2ms easy solution with C&#x2F;C++"
        },
        {
            "java": "public class Solution {--newline--    public int compareVersion(String version1, String version2) {--newline--        --newline--        String[] v1 = version1.split(\"\\\\.\");--newline--        String[] v2 = version2.split(\"\\\\.\");--newline--        --newline--        for ( int i = 0; i < Math.max(v1.length, v2.length); i++ ) {--newline--            int num1 = i < v1.length ? Integer.parseInt( v1[i] ) : 0;--newline--            int num2 = i < v2.length ? Integer.parseInt( v2[i] ) : 0;--newline--            if ( num1 < num2 ) {--newline--                return -1;--newline--            } else if ( num1 > num2 ) {--newline--                return +1;--newline--            }--newline--        } --newline--        --newline--        return 0;--newline--    }--newline--}",
            "is_locked": false,
            "cpp": null,
            "python": null,
            "topic_title": "Java solution with fewer if logic"
        },
        {
            "java": null,
            "is_locked": false,
            "cpp": null,
            "python": null,
            "topic_title": "Cudos on who invent such a boring question"
        },
        {
            "java": "public class Solution {--newline--public int compareVersion(String version1, String version2) {--newline--    int temp1 = 0,temp2 = 0;--newline--    int len1 = version1.length(),len2 = version2.length();--newline--    int i = 0,j = 0;--newline--    while(i<len1 || j<len2) {--newline--        temp1 = 0;--newline--        temp2 = 0;--newline--        while(i<len1 && version1.charAt(i) != '.') {--newline--            temp1 = temp1*10 + version1.charAt(i++)-'0';--newline--            --newline--        }--newline--        while(j<len2 && version2.charAt(j) != '.') {--newline--            temp2 = temp2*10 + version2.charAt(j++)-'0';--newline--            --newline--        }--newline--        if(temp1>temp2) return 1;--newline--        else if(temp1<temp2) return -1;--newline--        else {--newline--            i++;--newline--            j++;--newline--            --newline--        }--newline--        --newline--    }--newline--    return 0;--newline--    --newline--}--newline--",
            "is_locked": false,
            "cpp": null,
            "python": null,
            "topic_title": "My JAVA solution without split"
        }
    ],
    "qc": "165.json"
}