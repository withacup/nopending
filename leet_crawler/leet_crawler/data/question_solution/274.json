{
    "posts": [
        {
            "java": "public class Solution {--newline--    // 9.3 70 years diaoZhaTian China jiaYou --newline--    public int hIndex(int[] citations) {--newline--        int length = citations.length;--newline--        if (length == 0) {--newline--        --tab--return 0;--newline--        }--newline--        --newline--        int[] array2 = new int[length + 1];--newline--        for (int i = 0; i < length; i++) {--newline--        --tab--if (citations[i] > length) {--newline--        --tab----tab--array2[length] += 1;--newline--        --tab--} else {--newline--        --tab----tab--array2[citations[i]] += 1;--newline--        --tab--}--newline--        }--newline--        int t = 0;--newline--        int result = 0;--newline----newline--        for (int i = length; i >= 0; i--) {--newline--        --tab--t = t + array2[i];--newline--        --tab--if (t >= i) {--newline--        --tab----tab--return i;--newline--        --tab--}--newline--        }--newline--        return 0;--newline--    }--newline--}",
            "is_locked": false,
            "cpp": null,
            "python": null,
            "topic_title": "My O(n) time solution use Java"
        },
        {
            "java": "public class Solution {--newline--    public int hIndex(int[] citations) {--newline--        int n = citations.length;--newline--        int[] buckets = new int[n+1];--newline--        for(int c : citations) {--newline--            if(c >= n) {--newline--                buckets[n]++;--newline--            } else {--newline--                buckets[c]++;--newline--            }--newline--        }--newline--        int count = 0;--newline--        for(int i = n; i >= 0; i--) {--newline--            count += buckets[i];--newline--            if(count >= i) {--newline--                return i;--newline--            }--newline--        }--newline--        return 0;--newline--    }--newline--    --newline--}",
            "is_locked": false,
            "cpp": null,
            "python": null,
            "topic_title": "Java bucket sort O(n) solution with detail explanation"
        },
        {
            "java": "public class Solution {--newline--    public int hIndex(int[] citations) {--newline--        int len = citations.length;--newline--        int[] count = new int[len + 1];--newline--        --newline--        for (int c: citations)--newline--            if (c > len) --newline--                count[len]++;--newline--            else --newline--                count[c]++;--newline--        --newline--        --newline--        int total = 0;--newline--        for (int i = len; i >= 0; i--) {--newline--            total += count[i];--newline--            if (total >= i)--newline--                return i;--newline--        }--newline--        --newline--        return 0;--newline--    }--newline--}",
            "is_locked": false,
            "cpp": null,
            "python": null,
            "topic_title": "A Clean O(N) Solution in Java"
        },
        {
            "java": "public class Solution {--newline--public int hIndex(int[] citations) {--newline--    int n = citations.length, tot=0;--newline--    int[] arr = new int[n+1];--newline--    for (int i=0; i<n; i++) {--newline--        if (citations[i]>=n) arr[n]++;--newline--        else arr[citations[i]]++;--newline--    }--newline--    for (int i=n; i>=0; i--) {--newline--        tot += arr[i];--newline--        if (tot>=i) return i;--newline--    }--newline--    return 0;--newline--}--newline--",
            "is_locked": false,
            "cpp": null,
            "python": null,
            "topic_title": "Java, O(n) time, with easy explanation."
        },
        {
            "java": "public class Solution {--newline--     public int hIndex(int[] citations) {--newline--       Arrays.sort(citations);--newline--       int len=citations.length;--newline--        for(int i=0;i<len;i++){--newline--            if(citations[i]>=len-i) return len-i;--newline--            --newline--        }--newline--        return 0;--newline--    }--newline--}",
            "is_locked": false,
            "cpp": null,
            "python": null,
            "topic_title": "My easy solution"
        }
    ],
    "qc": "274.json"
}