{
    "posts": [
        {
            "java": "public class Solution {--newline--    public char findTheDifference(String s, String t) {--newline--    --tab--int n = t.length();--newline--    --tab--char c = t.charAt(n - 1);--newline--    --tab--for (int i = 0; i < n - 1; ++i) {--newline--    --tab----tab--c ^= s.charAt(i);--newline--    --tab----tab--c ^= t.charAt(i);--newline--    --tab--}--newline--    --tab--return c;--newline--    }--newline--}",
            "is_locked": false,
            "cpp": null,
            "python": null,
            "topic_title": "Java solution using bit manipulation"
        },
        {
            "java": "public class Solution {--newline--    public char findTheDifference(String s, String t) {--newline--        // Initialize variables to store sum of ASCII codes for --newline--        // each string--newline--        int charCodeS = 0, charCodeT = 0;--newline--        // Iterate through both strings and char codes--newline--        for (int i = 0; i < s.length(); ++i) charCodeS += (int)s.charAt(i);--newline--        for (int i = 0; i < t.length(); ++i) charCodeT += (int)t.charAt(i);--newline--        // Return the difference between 2 strings as char--newline--        return (char)(charCodeT - charCodeS);--newline--    }--newline--}--newline----newline--UPDATE:--newline--Thanks to @zzhai for providing this optimization! :) --newline--\"1 optimization: As t.length() is just 1 character longer than s.length(), we can use 1 pass to process both strings (20% better runtime performance).\"--newline--public char findTheDifference(String s, String t) {--newline--        int charCode = t.charAt(s.length());--newline--        // Iterate through both strings and char codes--newline--        for (int i = 0; i < s.length(); ++i) {--newline--              charCode -= (int)s.charAt(i);--newline--              charCode += (int)t.charAt(i); --newline--        }--newline--        return (char)charCode;--newline--    }--newline--",
            "is_locked": false,
            "cpp": null,
            "python": null,
            "topic_title": "Simple JAVA 8ms solution, 4 lines"
        },
        {
            "java": null,
            "is_locked": false,
            "cpp": "class Solution {--newline--public:--newline--    char findTheDifference(string s, string t) {--newline--        char r=0;--newline--        for(char c:s) r ^=c;--newline--        for(char c:t) r ^=c;--newline--        return r;--newline--    }--newline--};--newline--",
            "python": null,
            "topic_title": "Concise C++ solution using XOR"
        },
        {
            "java": null,
            "is_locked": false,
            "cpp": null,
            "python": "class Solution(object):--newline----tab--    def findTheDifference(self, s, t):--newline----tab--        s, t = sorted(s), sorted(t)--newline----tab--        return t[-1] if s == t[:-1] else [x[1] for x in zip(s, t) if x[0] != x[1]][0]--newline----tab--",
            "topic_title": "1-liners and 2-liner in Python"
        },
        {
            "java": null,
            "is_locked": false,
            "cpp": null,
            "python": null,
            "topic_title": "Java Solution using array: 6ms"
        }
    ],
    "qc": "389.json"
}