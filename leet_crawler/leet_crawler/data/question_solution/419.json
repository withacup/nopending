{
    "posts": [
        {
            "java": "public class Solution {--newline--    --newline--        public int countBattleships(char[][] board) {--newline--            int m = board.length;--newline--            if (m==0) return 0;--newline--            int n = board[0].length;--newline--            --newline--            int count=0;--newline--            --newline--            for (int i=0; i<m; i++) {--newline--                for (int j=0; j<n; j++) {--newline--                    if (board[i][j] == '.') continue;--newline--                    if (i > 0 && board[i-1][j] == 'X') continue;--newline--                    if (j > 0 && board[i][j-1] == 'X') continue;--newline--                    count++;--newline--                }--newline--            }--newline--            --newline--            return count;--newline--        }--newline--    --newline--}",
            "is_locked": false,
            "cpp": null,
            "python": null,
            "topic_title": "Simple Java Solution"
        },
        {
            "java": "public class Solution {--newline--    public int countBattleships(char[][] board) {--newline--        int count = 0;--newline--        for(int i=0;i<board.length;i++)--newline--            for(int j=0;j<board[0].length;j++)--newline--                if(board[i][j]=='X' && (i==0 || board[i-1][j]!='X') && (j==0 || board[i][j-1]!='X')) count++;--newline--        return count;--newline--    }--newline--    --newline--}",
            "is_locked": false,
            "cpp": null,
            "python": null,
            "topic_title": "Share my 7-line code, 1-line core code, 3ms, super easy"
        },
        {
            "java": null,
            "is_locked": false,
            "cpp": null,
            "python": "class Solution(object):--newline----tab--    def countBattleships(self, board):--newline----tab--        if len(board) == 0: return 0--newline----tab--        m, n = len(board), len(board[0])--newline----tab--        count = 0--newline----tab--        for i in range(m):--newline----tab--            for j in range(n):--newline----tab--                if board[i][j] == 'X' and (i == 0 or board[i-1][j] == '.') and (j == 0 or board[i][j-1] == '.'):--newline----tab--                    count += 1--newline----tab--        return count--newline----tab--",
            "topic_title": "Python solution"
        },
        {
            "java": null,
            "is_locked": false,
            "cpp": null,
            "python": null,
            "topic_title": "Confused with test cases"
        },
        {
            "java": "public class Solution {--newline--    public int countBattleships(char[][] board) {--newline--    --tab--if (board == null || board.length == 0 || board[0].length == 0) return 0;--newline--    --tab--int R = board.length, C = board[0].length, cnt = 0;--newline--    --tab--for (int i = 0; i < R; i++) {--newline--    --tab----tab--for (int j = 0; j < C; j++) {--newline--    --tab----tab----tab--if (board[i][j] == 'X' && (i == 0 || board[i - 1][j] == '.') && (j == 0 || board[i][j - 1] == '.'))--newline--    --tab----tab----tab----tab--cnt++;--newline--    --tab----tab--}--newline--    --tab--}--newline--    --tab----newline--    --tab--return cnt;--newline--    }--newline--    --newline--}",
            "is_locked": false,
            "cpp": null,
            "python": null,
            "topic_title": "4ms Java Optimized code"
        }
    ],
    "qc": "419.json"
}