---CONTENT_BEGIN---
Given a string containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.

The brackets must close in the correct order, "()" and "()[]{}" are all valid but "(]" and "([)]" are not.

---CONTENT_END---
---SCRIPT_BEGIN---
[{"value": "cpp", "defaultCode": "class Solution { public:     bool isValid(string s) {              } };", "text": "C++"}, {"value": "java", "defaultCode": "public class Solution {     public boolean isValid(String s) {              } }", "text": "Java"}, {"value": "python", "defaultCode": "class Solution(object):     def isValid(self, s):         '''         :type s: str         :rtype: bool         '''         ", "text": "Python"}, {"value": "c", "defaultCode": "bool isValid(char* s) {      }", "text": "C"}, {"value": "csharp", "defaultCode": "public class Solution {     public bool IsValid(string s) {              } }", "text": "C#"}, {"value": "javascript", "defaultCode": "/**  * @param {string} s  * @return {boolean}  */ var isValid = function(s) {      };", "text": "JavaScript"}, {"value": "ruby", "defaultCode": "# @param {String} s # @return {Boolean} def is_valid(s)      end", "text": "Ruby"}, {"value": "swift", "defaultCode": "class Solution {     func isValid(_ s: String) -> Bool {              } }", "text": "Swift"}, {"value": "golang", "defaultCode": "func isValid(s string) bool {      }", "text": "Go"}]
---SCRIPT_END---
