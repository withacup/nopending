---CONTENT_BEGIN---

Given s1, s2, s3, find whether s3 is formed by the interleaving of s1 and s2.



For example,
Given:
s1 = "aabcc",
s2 = "dbbca",


When s3 = "aadbbcbcac", return true.
When s3 = "aadbbbaccc", return false.

---CONTENT_END---
---SCRIPT_BEGIN---
[{"value": "cpp", "defaultCode": "class Solution { public:     bool isInterleave(string s1, string s2, string s3) {              } };", "text": "C++"}, {"value": "java", "defaultCode": "public class Solution {     public boolean isInterleave(String s1, String s2, String s3) {              } }", "text": "Java"}, {"value": "python", "defaultCode": "class Solution(object):     def isInterleave(self, s1, s2, s3):         '''         :type s1: str         :type s2: str         :type s3: str         :rtype: bool         '''         ", "text": "Python"}, {"value": "c", "defaultCode": "bool isInterleave(char* s1, char* s2, char* s3) {      }", "text": "C"}, {"value": "csharp", "defaultCode": "public class Solution {     public bool IsInterleave(string s1, string s2, string s3) {              } }", "text": "C#"}, {"value": "javascript", "defaultCode": "/**  * @param {string} s1  * @param {string} s2  * @param {string} s3  * @return {boolean}  */ var isInterleave = function(s1, s2, s3) {      };", "text": "JavaScript"}, {"value": "ruby", "defaultCode": "# @param {String} s1 # @param {String} s2 # @param {String} s3 # @return {Boolean} def is_interleave(s1, s2, s3)      end", "text": "Ruby"}, {"value": "swift", "defaultCode": "class Solution {     func isInterleave(_ s1: String, _ s2: String, _ s3: String) -> Bool {              } }", "text": "Swift"}, {"value": "golang", "defaultCode": "func isInterleave(s1 string, s2 string, s3 string) bool {      }", "text": "Go"}]
---SCRIPT_END---
