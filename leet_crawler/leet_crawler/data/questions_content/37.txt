---CONTENT_BEGIN---
Write a program to solve a Sudoku puzzle by filling the empty cells.

Empty cells are indicated by the character '.'.

You may assume that there will be only one unique solution.



A sudoku puzzle...




...and its solution numbers marked in red.

---CONTENT_END---
---SCRIPT_BEGIN---
[{"text": "C++", "value": "cpp", "defaultCode": "class Solution { public:     void solveSudoku(vector<vector<char>>& board) {              } };"}, {"text": "Java", "value": "java", "defaultCode": "public class Solution {     public void solveSudoku(char[][] board) {              } }"}, {"text": "Python", "value": "python", "defaultCode": "class Solution(object):     def solveSudoku(self, board):         '''         :type board: List[List[str]]         :rtype: void Do not return anything, modify board in-place instead.         '''         "}, {"text": "C", "value": "c", "defaultCode": "void solveSudoku(char** board, int boardRowSize, int boardColSize) {      }"}, {"text": "C#", "value": "csharp", "defaultCode": "public class Solution {     public void SolveSudoku(char[,] board) {              } }"}, {"text": "JavaScript", "value": "javascript", "defaultCode": "/**  * @param {character[][]} board  * @return {void} Do not return anything, modify board in-place instead.  */ var solveSudoku = function(board) {      };"}, {"text": "Ruby", "value": "ruby", "defaultCode": "# @param {Character[][]} board # @return {Void} Do not return anything, modify board in-place instead. def solve_sudoku(board)      end"}, {"text": "Swift", "value": "swift", "defaultCode": "class Solution {     func solveSudoku(_ board: inout [[Character]]) {              } }"}, {"text": "Go", "value": "golang", "defaultCode": "func solveSudoku(board [][]byte)  {      }"}]
---SCRIPT_END---
