---CONTENT_BEGIN---
You are climbing a stair case. It takes n steps to reach to the top.

Each time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top?


Note: Given n will be a positive integer.

---CONTENT_END---
---SCRIPT_BEGIN---
[{"value": "cpp", "defaultCode": "class Solution { public:     int climbStairs(int n) {              } };", "text": "C++"}, {"value": "java", "defaultCode": "public class Solution {     public int climbStairs(int n) {              } }", "text": "Java"}, {"value": "python", "defaultCode": "class Solution(object):     def climbStairs(self, n):         '''         :type n: int         :rtype: int         '''         ", "text": "Python"}, {"value": "c", "defaultCode": "int climbStairs(int n) {      }", "text": "C"}, {"value": "csharp", "defaultCode": "public class Solution {     public int ClimbStairs(int n) {              } }", "text": "C#"}, {"value": "javascript", "defaultCode": "/**  * @param {number} n  * @return {number}  */ var climbStairs = function(n) {      };", "text": "JavaScript"}, {"value": "ruby", "defaultCode": "# @param {Integer} n # @return {Integer} def climb_stairs(n)      end", "text": "Ruby"}, {"value": "swift", "defaultCode": "class Solution {     func climbStairs(_ n: Int) -> Int {              } }", "text": "Swift"}, {"value": "golang", "defaultCode": "func climbStairs(n int) int {      }", "text": "Go"}]
---SCRIPT_END---
