---CONTENT_BEGIN---
Given a positive integer num, write a function which returns True if num is a perfect square else False.


Note: Do not use any built-in library function such as sqrt.


Example 1:

Input: 16
Returns: True



Example 2:

Input: 14
Returns: False



Credits:Special thanks to @elmirap for adding this problem and creating all test cases.
---CONTENT_END---
---SCRIPT_BEGIN---
[{"text": "C++", "value": "cpp", "defaultCode": "class Solution { public:     bool isPerfectSquare(int num) {              } };"}, {"text": "Java", "value": "java", "defaultCode": "public class Solution {     public boolean isPerfectSquare(int num) {              } }"}, {"text": "Python", "value": "python", "defaultCode": "class Solution(object):     def isPerfectSquare(self, num):         '''         :type num: int         :rtype: bool         '''"}, {"text": "C", "value": "c", "defaultCode": "bool isPerfectSquare(int num) {      }"}, {"text": "C#", "value": "csharp", "defaultCode": "public class Solution {     public bool IsPerfectSquare(int num) {              } }"}, {"text": "JavaScript", "value": "javascript", "defaultCode": "/**  * @param {number} num  * @return {boolean}  */ var isPerfectSquare = function(num) {      };"}, {"text": "Ruby", "value": "ruby", "defaultCode": "# @param {Integer} num # @return {Boolean} def is_perfect_square(num)      end"}, {"text": "Swift", "value": "swift", "defaultCode": "class Solution {     func isPerfectSquare(_ num: Int) -> Bool {              } }"}, {"text": "Go", "value": "golang", "defaultCode": "func isPerfectSquare(num int) bool {      }"}]
---SCRIPT_END---
