---CONTENT_BEGIN---
Given two strings s and t, write a function to determine if t is an anagram of s. 

For example,
s = "anagram", t = "nagaram", return true.
s = "rat", t = "car", return false.


Note:
You may assume the string contains only lowercase alphabets.

Follow up:
What if the inputs contain unicode characters? How would you adapt your solution to such case?
---CONTENT_END---
---SCRIPT_BEGIN---
[{"value": "cpp", "defaultCode": "class Solution { public:     bool isAnagram(string s, string t) {              } };", "text": "C++"}, {"value": "java", "defaultCode": "public class Solution {     public boolean isAnagram(String s, String t) {              } }", "text": "Java"}, {"value": "python", "defaultCode": "class Solution(object):     def isAnagram(self, s, t):         '''         :type s: str         :type t: str         :rtype: bool         '''         ", "text": "Python"}, {"value": "c", "defaultCode": "bool isAnagram(char* s, char* t) {      }", "text": "C"}, {"value": "csharp", "defaultCode": "public class Solution {     public bool IsAnagram(string s, string t) {              } }", "text": "C#"}, {"value": "javascript", "defaultCode": "/**  * @param {string} s  * @param {string} t  * @return {boolean}  */ var isAnagram = function(s, t) {      };", "text": "JavaScript"}, {"value": "ruby", "defaultCode": "# @param {String} s # @param {String} t # @return {Boolean} def is_anagram(s, t)      end", "text": "Ruby"}, {"value": "swift", "defaultCode": "class Solution {     func isAnagram(_ s: String, _ t: String) -> Bool {              } }", "text": "Swift"}, {"value": "golang", "defaultCode": "func isAnagram(s string, t string) bool {      }", "text": "Go"}]
---SCRIPT_END---
