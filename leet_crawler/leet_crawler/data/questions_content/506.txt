---CONTENT_BEGIN---

Given scores of N athletes, find their relative ranks and the people with the top three highest scores, who will be awarded medals: "Gold Medal", "Silver Medal" and "Bronze Medal".

Example 1:

Input: [5, 4, 3, 2, 1]
Output: ["Gold Medal", "Silver Medal", "Bronze Medal", "4", "5"]
Explanation: The first three athletes got the top three highest scores, so they got "Gold Medal", "Silver Medal" and "Bronze Medal". For the left two athletes, you just need to output their relative ranks according to their scores.



Note:

N is a positive integer and won't exceed 10,000.
All the scores of athletes are guaranteed to be unique.


---CONTENT_END---
---SCRIPT_BEGIN---
[{"text": "C++", "value": "cpp", "defaultCode": "class Solution { public:     vector<string> findRelativeRanks(vector<int>& nums) {              } };"}, {"text": "Java", "value": "java", "defaultCode": "public class Solution {     public String[] findRelativeRanks(int[] nums) {              } }"}, {"text": "Python", "value": "python", "defaultCode": "class Solution(object):     def findRelativeRanks(self, nums):         '''         :type nums: List[int]         :rtype: List[str]         '''"}, {"text": "C", "value": "c", "defaultCode": "/**  * Return an array of size *returnSize.  * Note: The returned array must be malloced, assume caller calls free().  */ char** findRelativeRanks(int* nums, int numsSize, int* returnSize) {      }"}, {"text": "C#", "value": "csharp", "defaultCode": "public class Solution {     public string[] FindRelativeRanks(int[] nums) {              } }"}, {"text": "JavaScript", "value": "javascript", "defaultCode": "/**  * @param {number[]} nums  * @return {string[]}  */ var findRelativeRanks = function(nums) {      };"}, {"text": "Ruby", "value": "ruby", "defaultCode": "# @param {Integer[]} nums # @return {String[]} def find_relative_ranks(nums)      end"}, {"text": "Swift", "value": "swift", "defaultCode": "class Solution {     func findRelativeRanks(_ nums: [Int]) -> [String] {              } }"}, {"text": "Go", "value": "golang", "defaultCode": "func findRelativeRanks(nums []int) []string {      }"}]
---SCRIPT_END---
