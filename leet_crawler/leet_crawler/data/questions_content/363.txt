---CONTENT_BEGIN---
Given a non-empty 2D matrix matrix and an integer k, find the max sum of a rectangle in the matrix such that its sum is no larger than k.

Example:
Given matrix = [
  [1,  0, 1],
  [0, -2, 3]
]
k = 2



The answer is 2. Because the sum of rectangle [[0, 1], [-2, 3]] is 2 and 2 is the max number no larger than k (k = 2).

Note:

The rectangle inside the matrix must have an area > 0.
What if the number of rows is much larger than the number of columns?



Credits:Special thanks to @fujiaozhu for adding this problem and creating all test cases.
---CONTENT_END---
---SCRIPT_BEGIN---
[{"value": "cpp", "defaultCode": "class Solution { public:     int maxSumSubmatrix(vector<vector<int>>& matrix, int k) {              } };", "text": "C++"}, {"value": "java", "defaultCode": "public class Solution {     public int maxSumSubmatrix(int[][] matrix, int k) {              } }", "text": "Java"}, {"value": "python", "defaultCode": "class Solution(object):     def maxSumSubmatrix(self, matrix, k):         '''         :type matrix: List[List[int]]         :type k: int         :rtype: int         '''         ", "text": "Python"}, {"value": "c", "defaultCode": "int maxSumSubmatrix(int** matrix, int matrixRowSize, int matrixColSize, int k) {      }", "text": "C"}, {"value": "csharp", "defaultCode": "public class Solution {     public int MaxSumSubmatrix(int[,] matrix, int k) {              } }", "text": "C#"}, {"value": "javascript", "defaultCode": "/**  * @param {number[][]} matrix  * @param {number} k  * @return {number}  */ var maxSumSubmatrix = function(matrix, k) {      };", "text": "JavaScript"}, {"value": "ruby", "defaultCode": "# @param {Integer[][]} matrix # @param {Integer} k # @return {Integer} def max_sum_submatrix(matrix, k)      end", "text": "Ruby"}, {"value": "swift", "defaultCode": "class Solution {     func maxSumSubmatrix(_ matrix: [[Int]], _ k: Int) -> Int {              } }", "text": "Swift"}, {"value": "golang", "defaultCode": "func maxSumSubmatrix(matrix [][]int, k int) int {      }", "text": "Go"}]
---SCRIPT_END---
