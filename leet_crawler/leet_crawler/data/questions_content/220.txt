---CONTENT_BEGIN---

Given an array of integers, find out whether there are two distinct indices i and j in the array such that the absolute difference between nums[i] and nums[j] is at most t and the absolute difference between i and j is at most k.

---CONTENT_END---
---SCRIPT_BEGIN---
[{"text": "C++", "value": "cpp", "defaultCode": "class Solution { public:     bool containsNearbyAlmostDuplicate(vector<int>& nums, int k, int t) {              } };"}, {"text": "Java", "value": "java", "defaultCode": "public class Solution {     public boolean containsNearbyAlmostDuplicate(int[] nums, int k, int t) {              } }"}, {"text": "Python", "value": "python", "defaultCode": "class Solution(object):     def containsNearbyAlmostDuplicate(self, nums, k, t):         '''         :type nums: List[int]         :type k: int         :type t: int         :rtype: bool         '''         "}, {"text": "C", "value": "c", "defaultCode": "bool containsNearbyAlmostDuplicate(int* nums, int numsSize, int k, int t) {      }"}, {"text": "C#", "value": "csharp", "defaultCode": "public class Solution {     public bool ContainsNearbyAlmostDuplicate(int[] nums, int k, int t) {              } }"}, {"text": "JavaScript", "value": "javascript", "defaultCode": "/**  * @param {number[]} nums  * @param {number} k  * @param {number} t  * @return {boolean}  */ var containsNearbyAlmostDuplicate = function(nums, k, t) {      };"}, {"text": "Ruby", "value": "ruby", "defaultCode": "# @param {Integer[]} nums # @param {Integer} k # @param {Integer} t # @return {Boolean} def contains_nearby_almost_duplicate(nums, k, t)      end"}, {"text": "Swift", "value": "swift", "defaultCode": "class Solution {     func containsNearbyAlmostDuplicate(_ nums: [Int], _ k: Int, _ t: Int) -> Bool {              } }"}, {"text": "Go", "value": "golang", "defaultCode": "func containsNearbyAlmostDuplicate(nums []int, k int, t int) bool {      }"}]
---SCRIPT_END---
