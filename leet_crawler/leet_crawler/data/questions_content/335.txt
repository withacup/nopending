---CONTENT_BEGIN---

    You are given an array x of n positive numbers. You start at point (0,0) and moves x[0] metres to the north, then x[1] metres to the west,
    x[2] metres to the south,
    x[3] metres to the east and so on. In other words, after each move your direction changes
    counter-clockwise.


    Write a one-pass algorithm with O(1) extra space to determine, if your path crosses itself, or not.



Example 1:

Given x = [2, 1, 1, 2],
âââââ
â   â
âââââ¼ââ>
    â

Return true (self crossing)




Example 2:

Given x = [1, 2, 3, 4],
ââââââââ
â      â
â
â
âââââââââââââ>

Return false (not self crossing)




Example 3:

Given x = [1, 1, 1, 1],
âââââ
â   â
âââââ¼>

Return true (self crossing)



Credits:Special thanks to @dietpepsi for adding this problem and creating all test cases.
---CONTENT_END---
---SCRIPT_BEGIN---
[{"text": "C++", "value": "cpp", "defaultCode": "class Solution { public:     bool isSelfCrossing(vector<int>& x) {              } };"}, {"text": "Java", "value": "java", "defaultCode": "public class Solution {     public boolean isSelfCrossing(int[] x) {              } }"}, {"text": "Python", "value": "python", "defaultCode": "class Solution(object):     def isSelfCrossing(self, x):         '''         :type x: List[int]         :rtype: bool         '''         "}, {"text": "C", "value": "c", "defaultCode": "bool isSelfCrossing(int* x, int xSize) {      }"}, {"text": "C#", "value": "csharp", "defaultCode": "public class Solution {     public bool IsSelfCrossing(int[] x) {              } }"}, {"text": "JavaScript", "value": "javascript", "defaultCode": "/**  * @param {number[]} x  * @return {boolean}  */ var isSelfCrossing = function(x) {      };"}, {"text": "Ruby", "value": "ruby", "defaultCode": "# @param {Integer[]} x # @return {Boolean} def is_self_crossing(x)      end"}, {"text": "Swift", "value": "swift", "defaultCode": "class Solution {     func isSelfCrossing(_ x: [Int]) -> Bool {              } }"}, {"text": "Go", "value": "golang", "defaultCode": "func isSelfCrossing(x []int) bool {      }"}]
---SCRIPT_END---
