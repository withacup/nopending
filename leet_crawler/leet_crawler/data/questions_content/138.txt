---CONTENT_BEGIN---

A linked list is given such that each node contains an additional random pointer which could point to any node in the list or null.



Return a deep copy of the list.

---CONTENT_END---
---SCRIPT_BEGIN---
[{"text": "C++", "value": "cpp", "defaultCode": "/**  * Definition for singly-linked list with a random pointer.  * struct RandomListNode {  *     int label;  *     RandomListNode *next, *random;  *     RandomListNode(int x) : label(x), next(NULL), random(NULL) {}  * };  */ class Solution { public:     RandomListNode *copyRandomList(RandomListNode *head) {              } };"}, {"text": "Java", "value": "java", "defaultCode": "/**  * Definition for singly-linked list with a random pointer.  * class RandomListNode {  *     int label;  *     RandomListNode next, random;  *     RandomListNode(int x) { this.label = x; }  * };  */ public class Solution {     public RandomListNode copyRandomList(RandomListNode head) {              } }"}, {"text": "Python", "value": "python", "defaultCode": "# Definition for singly-linked list with a random pointer. # class RandomListNode(object): #     def __init__(self, x): #         self.label = x #         self.next = None #         self.random = None  class Solution(object):     def copyRandomList(self, head):         '''         :type head: RandomListNode         :rtype: RandomListNode         '''"}, {"text": "C", "value": "c", "defaultCode": "/**  * Definition for singly-linked list with a random pointer.  * struct RandomListNode {  *     int label;  *     struct RandomListNode *next;  *     struct RandomListNode *random;  * };  */ struct RandomListNode *copyRandomList(struct RandomListNode *head) {      }"}, {"text": "C#", "value": "csharp", "defaultCode": "/**  * Definition for singly-linked list with a random pointer.  * public class RandomListNode {  *     public int label;  *     public RandomListNode next, random;  *     public RandomListNode(int x) { this.label = x; }  * };  */ public class Solution {     public RandomListNode CopyRandomList(RandomListNode head) {              } }"}, {"text": "JavaScript", "value": "javascript", "defaultCode": "/**  * Definition for singly-linked list with a random pointer.  * function RandomListNode(label) {  *     this.label = label;  *     this.next = this.random = null;  * }  */  /**  * @param {RandomListNode} head  * @return {RandomListNode}  */ var copyRandomList = function(head) {      };"}]
---SCRIPT_END---
