---CONTENT_BEGIN---
Given an array of integers, return indices of the two numbers such that they add up to a specific target.

You may assume that each input would have exactly one solution, and you may not use the same element twice.


Example:

Given nums = [2, 7, 11, 15], target = 9,

Because nums[0] + nums[1] = 2 + 7 = 9,
return [0, 1].


---CONTENT_END---
---SCRIPT_BEGIN---
[{"text": "C++", "value": "cpp", "defaultCode": "class Solution { public:     vector<int> twoSum(vector<int>& nums, int target) {              } };"}, {"text": "Java", "value": "java", "defaultCode": "public class Solution {     public int[] twoSum(int[] nums, int target) {              } }"}, {"text": "Python", "value": "python", "defaultCode": "class Solution(object):     def twoSum(self, nums, target):         '''         :type nums: List[int]         :type target: int         :rtype: List[int]         '''         "}, {"text": "Python3", "value": "python3", "defaultCode": "class Solution:     def twoSum(self, nums, target):         '''         :type nums: List[int]         :type target: int         :rtype: List[int]         '''         "}, {"text": "C", "value": "c", "defaultCode": "/**  * Note: The returned array must be malloced, assume caller calls free().  */ int* twoSum(int* nums, int numsSize, int target) {      }"}, {"text": "C#", "value": "csharp", "defaultCode": "public class Solution {     public int[] TwoSum(int[] nums, int target) {              } }"}, {"text": "JavaScript", "value": "javascript", "defaultCode": "/**  * @param {number[]} nums  * @param {number} target  * @return {number[]}  */ var twoSum = function(nums, target) {      };"}, {"text": "Ruby", "value": "ruby", "defaultCode": "# @param {Integer[]} nums # @param {Integer} target # @return {Integer[]} def two_sum(nums, target)      end"}, {"text": "Swift", "value": "swift", "defaultCode": "class Solution {     func twoSum(_ nums: [Int], _ target: Int) -> [Int] {              } }"}, {"text": "Go", "value": "golang", "defaultCode": "func twoSum(nums []int, target int) []int {      }"}]
---SCRIPT_END---
