---CONTENT_BEGIN---
Find the nth digit of the infinite integer sequence 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, ... 

Note:
n is positive and will fit within the range of a 32-bit signed integer (n < 231).


Example 1:

Input:
3

Output:
3



Example 2:

Input:
11

Output:
0

Explanation:
The 11th digit of the sequence 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, ... is a 0, which is part of the number 10.


---CONTENT_END---
---SCRIPT_BEGIN---
[{"text": "C++", "value": "cpp", "defaultCode": "class Solution { public:     int findNthDigit(int n) {              } };"}, {"text": "Java", "value": "java", "defaultCode": "public class Solution {     public int findNthDigit(int n) {              } }"}, {"text": "Python", "value": "python", "defaultCode": "class Solution(object):     def findNthDigit(self, n):         '''         :type n: int         :rtype: int         '''"}, {"text": "C", "value": "c", "defaultCode": "int findNthDigit(int n) {      }"}, {"text": "C#", "value": "csharp", "defaultCode": "public class Solution {     public int FindNthDigit(int n) {              } }"}, {"text": "JavaScript", "value": "javascript", "defaultCode": "/**  * @param {number} n  * @return {number}  */ var findNthDigit = function(n) {      };"}, {"text": "Ruby", "value": "ruby", "defaultCode": "# @param {Integer} n # @return {Integer} def find_nth_digit(n)      end"}, {"text": "Swift", "value": "swift", "defaultCode": "class Solution {     func findNthDigit(_ n: Int) -> Int {              } }"}, {"text": "Go", "value": "golang", "defaultCode": "func findNthDigit(n int) int {      }"}]
---SCRIPT_END---
