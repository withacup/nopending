---CONTENT_BEGIN---

Write a program to check whether a given number is an ugly number.



Ugly numbers are positive numbers whose prime factors only include 2, 3, 5. For example, 6, 8 are ugly while 14 is not ugly since it includes another prime factor 7.



Note that 1 is typically treated as an ugly number.


Credits:Special thanks to @jianchao.li.fighter for adding this problem and creating all test cases.
---CONTENT_END---
---SCRIPT_BEGIN---
[{"value": "cpp", "defaultCode": "class Solution { public:     bool isUgly(int num) {              } };", "text": "C++"}, {"value": "java", "defaultCode": "public class Solution {     public boolean isUgly(int num) {              } }", "text": "Java"}, {"value": "python", "defaultCode": "class Solution(object):     def isUgly(self, num):         '''         :type num: int         :rtype: bool         '''         ", "text": "Python"}, {"value": "c", "defaultCode": "bool isUgly(int num) {      }", "text": "C"}, {"value": "csharp", "defaultCode": "public class Solution {     public bool IsUgly(int num) {              } }", "text": "C#"}, {"value": "javascript", "defaultCode": "/**  * @param {number} num  * @return {boolean}  */ var isUgly = function(num) {      };", "text": "JavaScript"}, {"value": "ruby", "defaultCode": "# @param {Integer} num # @return {Boolean} def is_ugly(num)      end", "text": "Ruby"}, {"value": "swift", "defaultCode": "class Solution {     func isUgly(_ num: Int) -> Bool {              } }", "text": "Swift"}, {"value": "golang", "defaultCode": "func isUgly(num int) bool {      }", "text": "Go"}]
---SCRIPT_END---
