---CONTENT_BEGIN---
Given two strings s1 and s2, write a function to return true if s2 contains the permutation of s1. In other words, one of the first string's permutations is the substring of the second string.

Example 1:

Input:s1 = "ab" s2 = "eidbaooo"
Output:True
Explanation: s2 contains one permutation of s1 ("ba").



Example 2:

Input:s1= "ab" s2 = "eidboaoo"
Output: False



Note:

The input strings only contain lower case letters.
The length of both given strings is in range [1, 10,000].


---CONTENT_END---
---SCRIPT_BEGIN---
[{"text": "C++", "value": "cpp", "defaultCode": "class Solution { public:     bool checkInclusion(string s1, string s2) {              } };"}, {"text": "Java", "value": "java", "defaultCode": "public class Solution {     public boolean checkInclusion(String s1, String s2) {              } }"}, {"text": "Python", "value": "python", "defaultCode": "class Solution(object):     def checkInclusion(self, s1, s2):         '''         :type s1: str         :type s2: str         :rtype: bool         '''"}, {"text": "C", "value": "c", "defaultCode": "bool checkInclusion(char* s1, char* s2) {      }"}, {"text": "C#", "value": "csharp", "defaultCode": "public class Solution {     public bool CheckInclusion(string s1, string s2) {              } }"}, {"text": "JavaScript", "value": "javascript", "defaultCode": "/**  * @param {string} s1  * @param {string} s2  * @return {boolean}  */ var checkInclusion = function(s1, s2) {      };"}, {"text": "Ruby", "value": "ruby", "defaultCode": "# @param {String} s1 # @param {String} s2 # @return {Boolean} def check_inclusion(s1, s2)      end"}, {"text": "Swift", "value": "swift", "defaultCode": "class Solution {     func checkInclusion(_ s1: String, _ s2: String) -> Bool {              } }"}, {"text": "Go", "value": "golang", "defaultCode": "func checkInclusion(s1 string, s2 string) bool {      }"}]
---SCRIPT_END---
