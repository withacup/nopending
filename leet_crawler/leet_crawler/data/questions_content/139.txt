---CONTENT_BEGIN---

Given a non-empty string s and a dictionary wordDict containing a list of non-empty words, determine if s can be segmented into a space-separated sequence of one or more dictionary words. You may assume the dictionary does not contain duplicate words.


For example, given
s = "leetcode",
dict = ["leet", "code"].



Return true because "leetcode" can be segmented as "leet code".



UPDATE (2017/1/4):
The wordDict parameter had been changed to a list of strings (instead of a set of strings). Please reload the code definition to get the latest changes.

---CONTENT_END---
---SCRIPT_BEGIN---
[{"text": "C++", "value": "cpp", "defaultCode": "class Solution { public:     bool wordBreak(string s, vector<string>& wordDict) {              } };"}, {"text": "Java", "value": "java", "defaultCode": "public class Solution {     public boolean wordBreak(String s, List<String> wordDict) {              } }"}, {"text": "Python", "value": "python", "defaultCode": "class Solution(object):     def wordBreak(self, s, wordDict):         '''         :type s: str         :type wordDict: List[str]         :rtype: bool         '''"}, {"text": "C", "value": "c", "defaultCode": "bool wordBreak(char* s, char** wordDict, int wordDictSize) {      }"}, {"text": "C#", "value": "csharp", "defaultCode": "public class Solution {     public bool WordBreak(string s, IList<string> wordDict) {              } }"}, {"text": "JavaScript", "value": "javascript", "defaultCode": "/**  * @param {string} s  * @param {string[]} wordDict  * @return {boolean}  */ var wordBreak = function(s, wordDict) {      };"}, {"text": "Ruby", "value": "ruby", "defaultCode": "# @param {String} s # @param {String[]} word_dict # @return {Boolean} def word_break(s, word_dict)      end"}, {"text": "Swift", "value": "swift", "defaultCode": "class Solution {     func wordBreak(_ s: String, _ wordDict: [String]) -> Bool {              } }"}, {"text": "Go", "value": "golang", "defaultCode": "func wordBreak(s string, wordDict []string) bool {      }"}]
---SCRIPT_END---
