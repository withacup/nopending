---CONTENT_BEGIN---
A robot is located at the top-left corner of a m x n grid (marked 'Start' in the diagram below).

The robot can only move either down or right at any point in time. The robot is trying to reach the bottom-right corner of the grid (marked 'Finish' in the diagram below).

How many possible unique paths are there?



Above is a 3 x 7 grid. How many possible unique paths are there?


Note: m and n will be at most 100.
---CONTENT_END---
---SCRIPT_BEGIN---
[{"value": "cpp", "defaultCode": "class Solution { public:     int uniquePaths(int m, int n) {              } };", "text": "C++"}, {"value": "java", "defaultCode": "public class Solution {     public int uniquePaths(int m, int n) {              } }", "text": "Java"}, {"value": "python", "defaultCode": "class Solution(object):     def uniquePaths(self, m, n):         '''         :type m: int         :type n: int         :rtype: int         '''         ", "text": "Python"}, {"value": "c", "defaultCode": "int uniquePaths(int m, int n) {      }", "text": "C"}, {"value": "csharp", "defaultCode": "public class Solution {     public int UniquePaths(int m, int n) {              } }", "text": "C#"}, {"value": "javascript", "defaultCode": "/**  * @param {number} m  * @param {number} n  * @return {number}  */ var uniquePaths = function(m, n) {      };", "text": "JavaScript"}, {"value": "ruby", "defaultCode": "# @param {Integer} m # @param {Integer} n # @return {Integer} def unique_paths(m, n)      end", "text": "Ruby"}, {"value": "swift", "defaultCode": "class Solution {     func uniquePaths(_ m: Int, _ n: Int) -> Int {              } }", "text": "Swift"}, {"value": "golang", "defaultCode": "func uniquePaths(m int, n int) int {      }", "text": "Go"}]
---SCRIPT_END---
