---CONTENT_BEGIN---

Given an array of 2n integers, your task is to group these integers into n pairs of integer, say (a1, b1), (a2, b2), ..., (an, bn) which makes sum of min(ai, bi) for all i from 1 to n as large as possible.


Example 1:

Input: [1,4,3,2]

Output: 4
Explanation: n is 2, and the maximum sum of pairs is 4.



Note:

n is a positive integer, which is in the range of [1, 10000].
All the integers in the array will be in the range of [-10000, 10000].


---CONTENT_END---
---SCRIPT_BEGIN---
[{"value": "cpp", "defaultCode": "class Solution { public:     int arrayPairSum(vector<int>& nums) {              } };", "text": "C++"}, {"value": "java", "defaultCode": "public class Solution {     public int arrayPairSum(int[] nums) {              } }", "text": "Java"}, {"value": "python", "defaultCode": "class Solution(object):     def arrayPairSum(self, nums):         '''         :type nums: List[int]         :rtype: int         '''", "text": "Python"}, {"value": "c", "defaultCode": "int arrayPairSum(int* nums, int numsSize) {      }", "text": "C"}, {"value": "csharp", "defaultCode": "public class Solution {     public int ArrayPairSum(int[] nums) {              } }", "text": "C#"}, {"value": "javascript", "defaultCode": "/**  * @param {number[]} nums  * @return {number}  */ var arrayPairSum = function(nums) {      };", "text": "JavaScript"}, {"value": "ruby", "defaultCode": "# @param {Integer[]} nums # @return {Integer} def array_pair_sum(nums)      end", "text": "Ruby"}, {"value": "swift", "defaultCode": "class Solution {     func arrayPairSum(_ nums: [Int]) -> Int {              } }", "text": "Swift"}, {"value": "golang", "defaultCode": "func arrayPairSum(nums []int) int {      }", "text": "Go"}]
---SCRIPT_END---
