---CONTENT_BEGIN---
Given a binary array, find the maximum number of consecutive 1s in this array.

Example 1:

Input: [1,1,0,1,1,1]
Output: 3
Explanation: The first two digits or the last three digits are consecutive 1s.
    The maximum number of consecutive 1s is 3.



Note:

The input array will only contain 0 and 1.
The length of input array is a positive integer and will not exceed 10,000


---CONTENT_END---
---SCRIPT_BEGIN---
[{"value": "cpp", "defaultCode": "class Solution { public:     int findMaxConsecutiveOnes(vector<int>& nums) {              } };", "text": "C++"}, {"value": "java", "defaultCode": "public class Solution {     public int findMaxConsecutiveOnes(int[] nums) {              } }", "text": "Java"}, {"value": "python", "defaultCode": "class Solution(object):     def findMaxConsecutiveOnes(self, nums):         '''         :type nums: List[int]         :rtype: int         '''", "text": "Python"}, {"value": "c", "defaultCode": "int findMaxConsecutiveOnes(int* nums, int numsSize) {      }", "text": "C"}, {"value": "csharp", "defaultCode": "public class Solution {     public int FindMaxConsecutiveOnes(int[] nums) {              } }", "text": "C#"}, {"value": "javascript", "defaultCode": "/**  * @param {number[]} nums  * @return {number}  */ var findMaxConsecutiveOnes = function(nums) {      };", "text": "JavaScript"}, {"value": "ruby", "defaultCode": "# @param {Integer[]} nums # @return {Integer} def find_max_consecutive_ones(nums)      end", "text": "Ruby"}, {"value": "swift", "defaultCode": "class Solution {     func findMaxConsecutiveOnes(_ nums: [Int]) -> Int {              } }", "text": "Swift"}, {"value": "golang", "defaultCode": "func findMaxConsecutiveOnes(nums []int) int {      }", "text": "Go"}]
---SCRIPT_END---
