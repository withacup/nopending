---CONTENT_BEGIN---
Define S = [s,n] as the string S which consists of n connected strings s. For example, ["abc", 3] ="abcabcabc". 
On the other hand, we define that string s1 can be obtained from string s2 if we can remove some characters from s2 such that it becomes s1. For example, âabcâ  can be obtained from âabdbecâ based on our definition, but it can not be obtained from âacbbeâ.
You are given two non-empty strings s1 and s2 (each at most 100 characters long) and two integers 0 &le; n1 &le; 106 and 1 &le; n2 &le; 106. Now consider the strings S1 and S2, where S1=[s1,n1] and S2=[s2,n2]. Find the maximum integer M such that [S2,M] can be obtained from S1.

Example:

Input:
s1="acb", n1=4
s2="ab", n2=2

Return:
2


---CONTENT_END---
---SCRIPT_BEGIN---
[{"text": "C++", "value": "cpp", "defaultCode": "class Solution { public:     int getMaxRepetitions(string s1, int n1, string s2, int n2) {              } };"}, {"text": "Java", "value": "java", "defaultCode": "public class Solution {     public int getMaxRepetitions(String s1, int n1, String s2, int n2) {              } }"}, {"text": "Python", "value": "python", "defaultCode": "class Solution(object):     def getMaxRepetitions(self, s1, n1, s2, n2):         '''         :type s1: str         :type n1: int         :type s2: str         :type n2: int         :rtype: int         '''"}, {"text": "C", "value": "c", "defaultCode": "int getMaxRepetitions(char* s1, int n1, char* s2, int n2) {      }"}, {"text": "C#", "value": "csharp", "defaultCode": "public class Solution {     public int GetMaxRepetitions(string s1, int n1, string s2, int n2) {              } }"}, {"text": "JavaScript", "value": "javascript", "defaultCode": "/**  * @param {string} s1  * @param {number} n1  * @param {string} s2  * @param {number} n2  * @return {number}  */ var getMaxRepetitions = function(s1, n1, s2, n2) {      };"}, {"text": "Ruby", "value": "ruby", "defaultCode": "# @param {String} s1 # @param {Integer} n1 # @param {String} s2 # @param {Integer} n2 # @return {Integer} def get_max_repetitions(s1, n1, s2, n2)      end"}, {"text": "Swift", "value": "swift", "defaultCode": "class Solution {     func getMaxRepetitions(_ s1: String, _ n1: Int, _ s2: String, _ n2: Int) -> Int {              } }"}, {"text": "Go", "value": "golang", "defaultCode": "func getMaxRepetitions(s1 string, n1 int, s2 string, n2 int) int {      }"}]
---SCRIPT_END---
