---CONTENT_BEGIN---

Given a string and an integer k, you need to reverse the first k characters for every 2k characters counting from the start of the string. If there are less than k characters left, reverse all of them. If there are less than 2k but greater than or equal to k characters, then reverse the first k characters and left the other as original.


Example:

Input: s = "abcdefg", k = 2
Output: "bacdfeg"



Restrictions: 

 The string consists of lower English letters only.
 Length of the given string and k will in the range [1, 10000]

---CONTENT_END---
---SCRIPT_BEGIN---
[{"text": "C++", "value": "cpp", "defaultCode": "class Solution { public:     string reverseStr(string s, int k) {              } };"}, {"text": "Java", "value": "java", "defaultCode": "public class Solution {     public String reverseStr(String s, int k) {              } }"}, {"text": "Python", "value": "python", "defaultCode": "class Solution(object):     def reverseStr(self, s, k):         '''         :type s: str         :type k: int         :rtype: str         '''"}, {"text": "C", "value": "c", "defaultCode": "char* reverseStr(char* s, int k) {      }"}, {"text": "C#", "value": "csharp", "defaultCode": "public class Solution {     public string ReverseStr(string s, int k) {              } }"}, {"text": "JavaScript", "value": "javascript", "defaultCode": "/**  * @param {string} s  * @param {number} k  * @return {string}  */ var reverseStr = function(s, k) {      };"}, {"text": "Ruby", "value": "ruby", "defaultCode": "# @param {String} s # @param {Integer} k # @return {String} def reverse_str(s, k)      end"}, {"text": "Swift", "value": "swift", "defaultCode": "class Solution {     func reverseStr(_ s: String, _ k: Int) -> String {              } }"}, {"text": "Go", "value": "golang", "defaultCode": "func reverseStr(s string, k int) string {      }"}]
---SCRIPT_END---
