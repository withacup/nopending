---CONTENT_BEGIN---

Given a sorted integer array without duplicates, return the summary of its ranges.


For example, given [0,1,2,4,5,7], return ["0->2","4->5","7"].


Credits:Special thanks to @jianchao.li.fighter for adding this problem and creating all test cases.
---CONTENT_END---
---SCRIPT_BEGIN---
[{"value": "cpp", "defaultCode": "class Solution { public:     vector<string> summaryRanges(vector<int>& nums) {              } };", "text": "C++"}, {"value": "java", "defaultCode": "public class Solution {     public List<String> summaryRanges(int[] nums) {              } }", "text": "Java"}, {"value": "python", "defaultCode": "class Solution(object):     def summaryRanges(self, nums):         '''         :type nums: List[int]         :rtype: List[str]         '''         ", "text": "Python"}, {"value": "c", "defaultCode": "/**  * Return an array of size *returnSize.  * Note: The returned array must be malloced, assume caller calls free().  */ char** summaryRanges(int* nums, int numsSize, int* returnSize) {      }", "text": "C"}, {"value": "csharp", "defaultCode": "public class Solution {     public IList<string> SummaryRanges(int[] nums) {              } }", "text": "C#"}, {"value": "javascript", "defaultCode": "/**  * @param {number[]} nums  * @return {string[]}  */ var summaryRanges = function(nums) {      };", "text": "JavaScript"}, {"value": "ruby", "defaultCode": "# @param {Integer[]} nums # @return {String[]} def summary_ranges(nums)      end", "text": "Ruby"}, {"value": "swift", "defaultCode": "class Solution {     func summaryRanges(_ nums: [Int]) -> [String] {              } }", "text": "Swift"}, {"value": "golang", "defaultCode": "func summaryRanges(nums []int) []string {      }", "text": "Go"}]
---SCRIPT_END---
