---CONTENT_BEGIN---

There are N children standing in a line. Each child is assigned a rating value. 


You are giving candies to these children subjected to the following requirements:


Each child must have at least one candy.
Children with a higher rating get more candies than their neighbors.


What is the minimum candies you must give?

---CONTENT_END---
---SCRIPT_BEGIN---
[{"value": "cpp", "defaultCode": "class Solution { public:     int candy(vector<int>& ratings) {              } };", "text": "C++"}, {"value": "java", "defaultCode": "public class Solution {     public int candy(int[] ratings) {              } }", "text": "Java"}, {"value": "python", "defaultCode": "class Solution(object):     def candy(self, ratings):         '''         :type ratings: List[int]         :rtype: int         '''         ", "text": "Python"}, {"value": "c", "defaultCode": "int candy(int* ratings, int ratingsSize) {      }", "text": "C"}, {"value": "csharp", "defaultCode": "public class Solution {     public int Candy(int[] ratings) {              } }", "text": "C#"}, {"value": "javascript", "defaultCode": "/**  * @param {number[]} ratings  * @return {number}  */ var candy = function(ratings) {      };", "text": "JavaScript"}, {"value": "ruby", "defaultCode": "# @param {Integer[]} ratings # @return {Integer} def candy(ratings)      end", "text": "Ruby"}, {"value": "swift", "defaultCode": "class Solution {     func candy(_ ratings: [Int]) -> Int {              } }", "text": "Swift"}, {"value": "golang", "defaultCode": "func candy(ratings []int) int {      }", "text": "Go"}]
---SCRIPT_END---
