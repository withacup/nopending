---CONTENT_BEGIN---

The string "PAYPALISHIRING" is written in a zigzag pattern on a given number of rows like this: (you may want to display this pattern in a fixed font for better legibility)

P   A   H   N
A P L S I I G
Y   I   R


And then read line by line: "PAHNAPLSIIGYIR"


Write the code that will take a string and make this conversion given a number of rows:

string convert(string text, int nRows);

convert("PAYPALISHIRING", 3) should return "PAHNAPLSIIGYIR".

---CONTENT_END---
---SCRIPT_BEGIN---
[{"text": "C++", "value": "cpp", "defaultCode": "class Solution { public:     string convert(string s, int numRows) {              } };"}, {"text": "Java", "value": "java", "defaultCode": "public class Solution {     public String convert(String s, int numRows) {              } }"}, {"text": "Python", "value": "python", "defaultCode": "class Solution(object):     def convert(self, s, numRows):         '''         :type s: str         :type numRows: int         :rtype: str         '''"}, {"text": "C", "value": "c", "defaultCode": "char* convert(char* s, int numRows) {      }"}, {"text": "C#", "value": "csharp", "defaultCode": "public class Solution {     public string Convert(string s, int numRows) {              } }"}, {"text": "JavaScript", "value": "javascript", "defaultCode": "/**  * @param {string} s  * @param {number} numRows  * @return {string}  */ var convert = function(s, numRows) {      };"}, {"text": "Ruby", "value": "ruby", "defaultCode": "# @param {String} s # @param {Integer} num_rows # @return {String} def convert(s, num_rows)      end"}, {"text": "Swift", "value": "swift", "defaultCode": "class Solution {     func convert(_ s: String, _ numRows: Int) -> String {              } }"}, {"text": "Go", "value": "golang", "defaultCode": "func convert(s string, numRows int) string {      }"}]
---SCRIPT_END---
