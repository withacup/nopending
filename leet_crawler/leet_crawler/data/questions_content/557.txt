---CONTENT_BEGIN---
Given a string, you need to reverse the order of characters in each word within a sentence while still preserving whitespace and initial word order.

Example 1:

Input: "Let's take LeetCode contest"
Output: "s'teL ekat edoCteeL tsetnoc"



Note:
In the string, each word is separated by single space and there will not be any extra space in the string.

---CONTENT_END---
---SCRIPT_BEGIN---
[{"text": "C++", "value": "cpp", "defaultCode": "class Solution { public:     string reverseWords(string s) {              } };"}, {"text": "Java", "value": "java", "defaultCode": "public class Solution {     public String reverseWords(String s) {              } }"}, {"text": "Python", "value": "python", "defaultCode": "class Solution(object):     def reverseWords(self, s):         '''         :type s: str         :rtype: str         '''"}, {"text": "C", "value": "c", "defaultCode": "char* reverseWords(char* s) {      }"}, {"text": "C#", "value": "csharp", "defaultCode": "public class Solution {     public string ReverseWords(string s) {              } }"}, {"text": "JavaScript", "value": "javascript", "defaultCode": "/**  * @param {string} s  * @return {string}  */ var reverseWords = function(s) {      };"}, {"text": "Ruby", "value": "ruby", "defaultCode": "# @param {String} s # @return {String} def reverse_words(s)      end"}, {"text": "Swift", "value": "swift", "defaultCode": "class Solution {     func reverseWords(_ s: String) -> String {              } }"}, {"text": "Go", "value": "golang", "defaultCode": "func reverseWords(s string) string {      }"}]
---SCRIPT_END---
