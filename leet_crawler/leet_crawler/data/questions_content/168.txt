---CONTENT_BEGIN---
Given a positive integer, return its corresponding column title as appear in an Excel sheet.

For example:

    1 -> A
    2 -> B
    3 -> C
    ...
    26 -> Z
    27 -> AA
    28 -> AB 

Credits:Special thanks to @ifanchu for adding this problem and creating all test cases.
---CONTENT_END---
---SCRIPT_BEGIN---
[{"value": "cpp", "defaultCode": "class Solution { public:     string convertToTitle(int n) {              } };", "text": "C++"}, {"value": "java", "defaultCode": "public class Solution {     public String convertToTitle(int n) {              } }", "text": "Java"}, {"value": "python", "defaultCode": "class Solution(object):     def convertToTitle(self, n):         '''         :type n: int         :rtype: str         '''         ", "text": "Python"}, {"value": "c", "defaultCode": "char* convertToTitle(int n) {      }", "text": "C"}, {"value": "csharp", "defaultCode": "public class Solution {     public string ConvertToTitle(int n) {              } }", "text": "C#"}, {"value": "javascript", "defaultCode": "/**  * @param {number} n  * @return {string}  */ var convertToTitle = function(n) {      };", "text": "JavaScript"}, {"value": "ruby", "defaultCode": "# @param {Integer} n # @return {String} def convert_to_title(n)      end", "text": "Ruby"}, {"value": "swift", "defaultCode": "class Solution {     func convertToTitle(_ n: Int) -> String {              } }", "text": "Swift"}, {"value": "golang", "defaultCode": "func convertToTitle(n int) string {      }", "text": "Go"}]
---SCRIPT_END---
