---CONTENT_BEGIN---

Given an integer (signed 32 bits), write a function to check whether it is a power of 4.

Example:
Given num = 16, return true.
Given num = 5, return false.


Follow up: Could you solve it without loops/recursion?

Credits:Special thanks to @yukuairoy  for adding this problem and creating all test cases.
---CONTENT_END---
---SCRIPT_BEGIN---
[{"value": "cpp", "defaultCode": "class Solution { public:     bool isPowerOfFour(int num) {              } };", "text": "C++"}, {"value": "java", "defaultCode": "public class Solution {     public boolean isPowerOfFour(int num) {              } }", "text": "Java"}, {"value": "python", "defaultCode": "class Solution(object):     def isPowerOfFour(self, num):         '''         :type num: int         :rtype: bool         '''         ", "text": "Python"}, {"value": "c", "defaultCode": "bool isPowerOfFour(int num) {      }", "text": "C"}, {"value": "csharp", "defaultCode": "public class Solution {     public bool IsPowerOfFour(int num) {              } }", "text": "C#"}, {"value": "javascript", "defaultCode": "/**  * @param {number} num  * @return {boolean}  */ var isPowerOfFour = function(num) {      };", "text": "JavaScript"}, {"value": "ruby", "defaultCode": "# @param {Integer} num # @return {Boolean} def is_power_of_four(num)      end", "text": "Ruby"}, {"value": "swift", "defaultCode": "class Solution {     func isPowerOfFour(_ num: Int) -> Bool {              } }", "text": "Swift"}, {"value": "golang", "defaultCode": "func isPowerOfFour(num int) bool {      }", "text": "Go"}]
---SCRIPT_END---
