---CONTENT_BEGIN---
Given n points on a 2D plane, find the maximum number of points that lie on the same straight line.
---CONTENT_END---
---SCRIPT_BEGIN---
[{"value": "cpp", "defaultCode": "/**  * Definition for a point.  * struct Point {  *     int x;  *     int y;  *     Point() : x(0), y(0) {}  *     Point(int a, int b) : x(a), y(b) {}  * };  */ class Solution { public:     int maxPoints(vector<Point>& points) {              } };", "text": "C++"}, {"value": "java", "defaultCode": "/**  * Definition for a point.  * class Point {  *     int x;  *     int y;  *     Point() { x = 0; y = 0; }  *     Point(int a, int b) { x = a; y = b; }  * }  */ public class Solution {     public int maxPoints(Point[] points) {              } }", "text": "Java"}, {"value": "python", "defaultCode": "# Definition for a point. # class Point(object): #     def __init__(self, a=0, b=0): #         self.x = a #         self.y = b  class Solution(object):     def maxPoints(self, points):         '''         :type points: List[Point]         :rtype: int         '''         ", "text": "Python"}, {"value": "c", "defaultCode": "/**  * Definition for a point.  * struct Point {  *     int x;  *     int y;  * }  */ int maxPoints(struct Point* points, int pointsSize) {      }", "text": "C"}, {"value": "csharp", "defaultCode": "/**  * Definition for a point.  * public class Point {  *     public int x;  *     public int y;  *     public Point() { x = 0; y = 0; }  *     public Point(int a, int b) { x = a; y = b; }  * }  */ public class Solution {     public int MaxPoints(Point[] points) {              } }", "text": "C#"}, {"value": "javascript", "defaultCode": "/**  * Definition for a point.  * function Point(x, y) {  *     this.x = x;  *     this.y = y;  * }  */ /**  * @param {Point[]} points  * @return {number}  */ var maxPoints = function(points) {      };", "text": "JavaScript"}, {"value": "ruby", "defaultCode": "# Definition for a point. # class Point #     attr_accessor :x, :y #     def initialize(x=0, y=0) #         @x = x #         @y = y #     end # end  # @param {Point[]} points # @return {Integer} def max_points(points)      end", "text": "Ruby"}, {"value": "golang", "defaultCode": "/**  * Definition for a point.  * type Point struct {  *     X int  *     Y int  * }  */ func maxPoints(points []Point) int {      }", "text": "Go"}]
---SCRIPT_END---
