---CONTENT_BEGIN---
The set [1,2,3,&#8230;,n] contains a total of n! unique permutations.

By listing and labeling all of the permutations in order,
We get the following sequence (ie, for n = 3):

"123"
"132"
"213"
"231"
"312"
"321"



Given n and k, return the kth permutation sequence.

Note: Given n will be between 1 and 9 inclusive.
---CONTENT_END---
---SCRIPT_BEGIN---
[{"value": "cpp", "defaultCode": "class Solution { public:     string getPermutation(int n, int k) {              } };", "text": "C++"}, {"value": "java", "defaultCode": "public class Solution {     public String getPermutation(int n, int k) {              } }", "text": "Java"}, {"value": "python", "defaultCode": "class Solution(object):     def getPermutation(self, n, k):         '''         :type n: int         :type k: int         :rtype: str         '''         ", "text": "Python"}, {"value": "c", "defaultCode": "char* getPermutation(int n, int k) {      }", "text": "C"}, {"value": "csharp", "defaultCode": "public class Solution {     public string GetPermutation(int n, int k) {              } }", "text": "C#"}, {"value": "javascript", "defaultCode": "/**  * @param {number} n  * @param {number} k  * @return {string}  */ var getPermutation = function(n, k) {      };", "text": "JavaScript"}, {"value": "ruby", "defaultCode": "# @param {Integer} n # @param {Integer} k # @return {String} def get_permutation(n, k)      end", "text": "Ruby"}, {"value": "swift", "defaultCode": "class Solution {     func getPermutation(_ n: Int, _ k: Int) -> String {              } }", "text": "Swift"}, {"value": "golang", "defaultCode": "func getPermutation(n int, k int) string {      }", "text": "Go"}]
---SCRIPT_END---
