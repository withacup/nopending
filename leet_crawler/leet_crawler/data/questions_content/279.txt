---CONTENT_BEGIN---

Given a positive integer n, find the least number of perfect square numbers (for example, 1, 4, 9, 16, ...) which sum to n.



For example, given n = 12, return 3 because 12 = 4 + 4 + 4; given n = 13, return 2 because 13 = 4 + 9.


Credits:Special thanks to @jianchao.li.fighter for adding this problem and creating all test cases.
---CONTENT_END---
---SCRIPT_BEGIN---
[{"text": "C++", "value": "cpp", "defaultCode": "class Solution { public:     int numSquares(int n) {              } };"}, {"text": "Java", "value": "java", "defaultCode": "public class Solution {     public int numSquares(int n) {              } }"}, {"text": "Python", "value": "python", "defaultCode": "class Solution(object):     def numSquares(self, n):         '''         :type n: int         :rtype: int         '''         "}, {"text": "C", "value": "c", "defaultCode": "int numSquares(int n) {      }"}, {"text": "C#", "value": "csharp", "defaultCode": "public class Solution {     public int NumSquares(int n) {              } }"}, {"text": "JavaScript", "value": "javascript", "defaultCode": "/**  * @param {number} n  * @return {number}  */ var numSquares = function(n) {      };"}, {"text": "Ruby", "value": "ruby", "defaultCode": "# @param {Integer} n # @return {Integer} def num_squares(n)      end"}, {"text": "Swift", "value": "swift", "defaultCode": "class Solution {     func numSquares(_ n: Int) -> Int {              } }"}, {"text": "Go", "value": "golang", "defaultCode": "func numSquares(n int) int {      }"}]
---SCRIPT_END---
