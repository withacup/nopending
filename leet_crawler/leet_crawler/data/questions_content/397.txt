---CONTENT_BEGIN---

Given a positive integer n and you can do operations as follow:




If n is even, replace n with n/2.
If n is odd, you can replace n with either n + 1 or n - 1.




What is the minimum number of replacements needed for n to become 1?




Example 1:

Input:
8

Output:
3

Explanation:
8 -> 4 -> 2 -> 1



Example 2:

Input:
7

Output:
4

Explanation:
7 -> 8 -> 4 -> 2 -> 1
or
7 -> 6 -> 3 -> 2 -> 1


---CONTENT_END---
---SCRIPT_BEGIN---
[{"text": "C++", "value": "cpp", "defaultCode": "class Solution { public:     int integerReplacement(int n) {              } };"}, {"text": "Java", "value": "java", "defaultCode": "public class Solution {     public int integerReplacement(int n) {              } }"}, {"text": "Python", "value": "python", "defaultCode": "class Solution(object):     def integerReplacement(self, n):         '''         :type n: int         :rtype: int         '''"}, {"text": "C", "value": "c", "defaultCode": "int integerReplacement(int n) {      }"}, {"text": "C#", "value": "csharp", "defaultCode": "public class Solution {     public int IntegerReplacement(int n) {              } }"}, {"text": "JavaScript", "value": "javascript", "defaultCode": "/**  * @param {number} n  * @return {number}  */ var integerReplacement = function(n) {      };"}, {"text": "Ruby", "value": "ruby", "defaultCode": "# @param {Integer} n # @return {Integer} def integer_replacement(n)      end"}, {"text": "Swift", "value": "swift", "defaultCode": "class Solution {     func integerReplacement(_ n: Int) -> Int {              } }"}, {"text": "Go", "value": "golang", "defaultCode": "func integerReplacement(n int) int {      }"}]
---SCRIPT_END---
