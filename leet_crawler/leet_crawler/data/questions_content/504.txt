---CONTENT_BEGIN---
Given an integer, return its base 7 string representation.

Example 1:

Input: 100
Output: "202"



Example 2:

Input: -7
Output: "-10"



Note:
The input will be in range of [-1e7, 1e7].

---CONTENT_END---
---SCRIPT_BEGIN---
[{"text": "C++", "value": "cpp", "defaultCode": "class Solution { public:     string convertToBase7(int num) {              } };"}, {"text": "Java", "value": "java", "defaultCode": "public class Solution {     public String convertToBase7(int num) {              } }"}, {"text": "Python", "value": "python", "defaultCode": "class Solution(object):     def convertToBase7(self, num):         '''         :type num: int         :rtype: str         '''         "}, {"text": "C", "value": "c", "defaultCode": "char* convertToBase7(int num) {      }"}, {"text": "C#", "value": "csharp", "defaultCode": "public class Solution {     public string ConvertToBase7(int num) {              } }"}, {"text": "JavaScript", "value": "javascript", "defaultCode": "/**  * @param {number} num  * @return {string}  */ var convertToBase7 = function(num) {      };"}, {"text": "Ruby", "value": "ruby", "defaultCode": "# @param {Integer} num # @return {String} def convert_to_base7(num)      end"}, {"text": "Swift", "value": "swift", "defaultCode": "class Solution {     func convertToBase7(_ num: Int) -> String {              } }"}, {"text": "Go", "value": "golang", "defaultCode": "func convertToBase7(num int) string {      }"}]
---SCRIPT_END---
