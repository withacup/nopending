---CONTENT_BEGIN---
Given an absolute path for a file (Unix-style), simplify it.

For example,
path = "/home/", => "/home"
path = "/a/./b/../../c/", => "/c"


click to show corner cases.

Corner Cases:



Did you consider the case where path = "/../"?
In this case, you should return "/".
Another corner case is the path might contain multiple slashes '/' together, such as "/home//foo/".
In this case, you should ignore redundant slashes and return "/home/foo".


---CONTENT_END---
---SCRIPT_BEGIN---
[{"value": "cpp", "defaultCode": "class Solution { public:     string simplifyPath(string path) {              } };", "text": "C++"}, {"value": "java", "defaultCode": "public class Solution {     public String simplifyPath(String path) {              } }", "text": "Java"}, {"value": "python", "defaultCode": "class Solution(object):     def simplifyPath(self, path):         '''         :type path: str         :rtype: str         '''         ", "text": "Python"}, {"value": "c", "defaultCode": "char* simplifyPath(char* path) {      }", "text": "C"}, {"value": "csharp", "defaultCode": "public class Solution {     public string SimplifyPath(string path) {              } }", "text": "C#"}, {"value": "javascript", "defaultCode": "/**  * @param {string} path  * @return {string}  */ var simplifyPath = function(path) {      };", "text": "JavaScript"}, {"value": "ruby", "defaultCode": "# @param {String} path # @return {String} def simplify_path(path)      end", "text": "Ruby"}, {"value": "swift", "defaultCode": "class Solution {     func simplifyPath(_ path: String) -> String {              } }", "text": "Swift"}, {"value": "golang", "defaultCode": "func simplifyPath(path string) string {      }", "text": "Go"}]
---SCRIPT_END---
