---CONTENT_BEGIN---
Given an array S of n integers, are there elements a, b, c, and d in S such that a + b + c + d = target? Find all unique quadruplets in the array which gives the sum of target.

Note: The solution set must not contain duplicate quadruplets.



For example, given array S = [1, 0, -1, 0, -2, 2], and target = 0.

A solution set is:
[
  [-1,  0, 0, 1],
  [-2, -1, 1, 2],
  [-2,  0, 0, 2]
]

---CONTENT_END---
---SCRIPT_BEGIN---
[{"value": "cpp", "defaultCode": "class Solution { public:     vector<vector<int>> fourSum(vector<int>& nums, int target) {              } };", "text": "C++"}, {"value": "java", "defaultCode": "public class Solution {     public List<List<Integer>> fourSum(int[] nums, int target) {              } }", "text": "Java"}, {"value": "python", "defaultCode": "class Solution(object):     def fourSum(self, nums, target):         '''         :type nums: List[int]         :type target: int         :rtype: List[List[int]]         '''         ", "text": "Python"}, {"value": "c", "defaultCode": "/**  * Return an array of arrays of size *returnSize.  * Note: The returned array must be malloced, assume caller calls free().  */ int** fourSum(int* nums, int numsSize, int target, int* returnSize) {      }", "text": "C"}, {"value": "csharp", "defaultCode": "public class Solution {     public IList<IList<int>> FourSum(int[] nums, int target) {              } }", "text": "C#"}, {"value": "javascript", "defaultCode": "/**  * @param {number[]} nums  * @param {number} target  * @return {number[][]}  */ var fourSum = function(nums, target) {      };", "text": "JavaScript"}, {"value": "ruby", "defaultCode": "# @param {Integer[]} nums # @param {Integer} target # @return {Integer[][]} def four_sum(nums, target)      end", "text": "Ruby"}, {"value": "swift", "defaultCode": "class Solution {     func fourSum(_ nums: [Int], _ target: Int) -> [[Int]] {              } }", "text": "Swift"}, {"value": "golang", "defaultCode": "func fourSum(nums []int, target int) [][]int {      }", "text": "Go"}]
---SCRIPT_END---
